/**
 * Support Management API
 * Use the Support Management API to manage support requests.
For more information, see [Getting Help and Contacting Support](/iaas/Content/GSG/Tasks/contactingsupport.htm).
**Note**: Before you can create service requests with this API,
complete user registration at My Oracle Cloud Support 
and then ask your tenancy administrator to provide you authorization for the related user groups.

 * OpenAPI spec version: 20181231
 * Contact: oci_ops_cims_dev_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Details about the incident classifier object.
 */
export interface Classifier {
  /**
   * Unique identifier of the classifier.
   */
  "id"?: string;
  /**
   * The display name of the classifier.
   */
  "name"?: string;
  /**
   * The label associated with the classifier.
   */
  "label"?: string;
  /**
   * The description of the classifier.
   */
  "description"?: string;
  /**
   * The list of issues.
   */
  "issueTypeList"?: Array<model.IssueType>;
  /**
   * The scope of the service category or resource.
   */
  "scope"?: Classifier.Scope;
  /**
   * The unit to use to measure the service category or resource.
   */
  "unit"?: Classifier.Unit;
}

export namespace Classifier {
  export enum Scope {
    Ad = "AD",
    Region = "REGION",
    Tenancy = "TENANCY",
    None = "NONE",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum Unit {
    Count = "COUNT",
    Gb = "GB",
    None = "NONE",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: Classifier): object {
    const jsonObj = {
      ...obj,
      ...{
        "issueTypeList": obj.issueTypeList
          ? obj.issueTypeList.map(item => {
              return model.IssueType.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: Classifier): object {
    const jsonObj = {
      ...obj,
      ...{
        "issueTypeList": obj.issueTypeList
          ? obj.issueTypeList.map(item => {
              return model.IssueType.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
