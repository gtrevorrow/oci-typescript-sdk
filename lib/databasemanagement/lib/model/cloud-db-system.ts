/**
 * Database Management API
 * Use the Database Management API to monitor and manage resources such as
Oracle Databases, MySQL Databases, and External Database Systems. 
For more information, see [Database Management](https://docs.oracle.com/iaas/database-management/home.htm).

 * OpenAPI spec version: 20201101
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * The details of a cloud DB system.
 */
export interface CloudDbSystem {
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud DB system.
   */
  "id": string;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the parent cloud DB Infrastructure. For VM Dbsystems ,
   * it will be the DBSystem Id. For ExaCS and ExaCC,  it will be the cloudVmClusterId and vmClusterId respectively.
   *
   */
  "dbaasParentInfrastructureId": string;
  /**
   * The deployment type of cloud dbsystem.
   */
  "deploymentType": model.CloudDbSystemDeploymentType;
  /**
   * The user-friendly name for the DB system. The name does not have to be unique.
   */
  "displayName": string;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
   */
  "compartmentId": string;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system discovery.
   */
  "dbSystemDiscoveryId"?: string;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management agent used during the discovery of the DB system.
   */
  "discoveryAgentId"?: string;
  /**
   * Indicates whether the DB system is a cluster DB system or not.
   */
  "isCluster"?: boolean;
  /**
   * The Oracle Grid home directory in case of cluster-based DB system and
   * Oracle home directory in case of single instance-based DB system.
   *
   */
  "homeDirectory"?: string;
  "databaseManagementConfig"?: model.CloudDbSystemDatabaseManagementConfigDetails;
  "stackMonitoringConfig"?: model.CloudDbSystemStackMonitoringConfigDetails;
  /**
   * The current lifecycle state of the cloud DB system resource.
   */
  "lifecycleState": CloudDbSystem.LifecycleState;
  /**
   * Additional information about the current lifecycle state.
   */
  "lifecycleDetails"?: string;
  /**
   * The date and time the cloud DB system was created.
   */
  "timeCreated": Date;
  /**
   * The date and time the cloud DB system was last updated.
   */
  "timeUpdated": Date;
  /**
   * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
   * For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
   * Example: {@code {\"Department\": \"Finance\"}}
   *
   */
  "freeformTags"?: { [key: string]: string };
  /**
   * Defined tags for this resource. Each key is predefined and scoped to a namespace.
   * For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
   * Example: {@code {\"Operations\": {\"CostCenter\": \"42\"}}}
   *
   */
  "definedTags"?: { [key: string]: { [key: string]: any } };
  /**
    * System tags for this resource. Each key is predefined and scoped to a namespace.
* For more information, see [Resource Tags](https://docs.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
* System tags can be viewed by users, but can only be created by the system.
* <p>
Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
* 
    */
  "systemTags"?: { [key: string]: { [key: string]: any } };
}

export namespace CloudDbSystem {
  export enum LifecycleState {
    Creating = "CREATING",
    Active = "ACTIVE",
    Updating = "UPDATING",
    Deleting = "DELETING",
    Deleted = "DELETED",
    Inactive = "INACTIVE",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: CloudDbSystem): object {
    const jsonObj = {
      ...obj,
      ...{
        "databaseManagementConfig": obj.databaseManagementConfig
          ? model.CloudDbSystemDatabaseManagementConfigDetails.getJsonObj(
              obj.databaseManagementConfig
            )
          : undefined,
        "stackMonitoringConfig": obj.stackMonitoringConfig
          ? model.CloudDbSystemStackMonitoringConfigDetails.getJsonObj(obj.stackMonitoringConfig)
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: CloudDbSystem): object {
    const jsonObj = {
      ...obj,
      ...{
        "databaseManagementConfig": obj.databaseManagementConfig
          ? model.CloudDbSystemDatabaseManagementConfigDetails.getDeserializedJsonObj(
              obj.databaseManagementConfig
            )
          : undefined,
        "stackMonitoringConfig": obj.stackMonitoringConfig
          ? model.CloudDbSystemStackMonitoringConfigDetails.getDeserializedJsonObj(
              obj.stackMonitoringConfig
            )
          : undefined
      }
    };

    return jsonObj;
  }
}
