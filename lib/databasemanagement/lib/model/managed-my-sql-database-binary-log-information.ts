/**
 * Database Management API
 * Use the Database Management API to monitor and manage resources such as
Oracle Databases, MySQL Databases, and External Database Systems. 
For more information, see [Database Management](https://docs.oracle.com/iaas/database-management/home.htm).

 * OpenAPI spec version: 20201101
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Information pertaining to the binary logs of a MySQL server.
 */
export interface ManagedMySqlDatabaseBinaryLogInformation {
  /**
   * The status of binary logging on the MySQL server.
   */
  "binaryLogging": string;
  /**
   * The binary logging format used by the MySQL server.
   */
  "binaryLogFormat"?: string;
  /**
   * Indicates whether compression is enabled for transactions written to binary log files on the MySQL server.
   */
  "binaryLogCompression"?: string;
  /**
   * The compression ratio for the binary log, expressed as a percentage. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "binaryLogCompressionPercent"?: number;
  /**
   * The name of the binary log file.
   */
  "binaryLogName"?: string;
  /**
   * The position within the binary log file. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "binaryLogPosition"?: number;
}

export namespace ManagedMySqlDatabaseBinaryLogInformation {
  export function getJsonObj(obj: ManagedMySqlDatabaseBinaryLogInformation): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: ManagedMySqlDatabaseBinaryLogInformation): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
