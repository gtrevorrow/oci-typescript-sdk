/**
 * Dblm API
 * A description of the Dblm API
 * OpenAPI spec version: 20240102
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * The Resource Info.
 */
export interface ResourceInfo {
  /**
   * The compartmentId of the resource.
   */
  "resourceCompartmentId": string;
  /**
   * The name of the resource.
   */
  "resourceName": string;
  /**
   * The Id of the resource.
   */
  "resourceId": string;
  /**
   * The type of the resource.
   */
  "resourceType": string;
  /**
   * The deployment type of the resource.
   */
  "deploymentType": string;
  /**
   * The connector Id of the resource.
   */
  "connectorId": string;
  /**
   * True if it is a cluster db.
   */
  "isClusterDb"?: boolean;
  /**
   * host info objects
   */
  "hostInfo": Array<model.HostInfo>;
  /**
   * The version of the resource.
   */
  "dbVersion": string;
  /**
   * The platform type of the resource.
   */
  "dbPlatformType": string;
  /**
   * The License Type of the resource.
   */
  "licenseType": string;
}

export namespace ResourceInfo {
  export function getJsonObj(obj: ResourceInfo): object {
    const jsonObj = {
      ...obj,
      ...{
        "hostInfo": obj.hostInfo
          ? obj.hostInfo.map(item => {
              return model.HostInfo.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: ResourceInfo): object {
    const jsonObj = {
      ...obj,
      ...{
        "hostInfo": obj.hostInfo
          ? obj.hostInfo.map(item => {
              return model.HostInfo.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
