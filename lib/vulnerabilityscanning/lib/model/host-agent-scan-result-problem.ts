/**
 * Scanning API
 * Use the Vulnerability Scanning Service (VSS) API to manage scan recipes, targets, and reports. For more information, see [the Vulnerability Scanning documentation](https://docs.oracle.com/iaas/scanning/home.htm).
 * OpenAPI spec version: 20210215
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * A problem found in a host agent scan
 */
export interface HostAgentScanResultProblem {
  /**
   * Name of the problem
   */
  "name": string;
  /**
   * Problem description
   */
  "description"?: string;
  /**
   * Problem severity
   */
  "severity": model.ScanResultProblemSeverity;
  /**
   * State of the vulnerability
   */
  "state"?: model.ScanResultVulnerabilityState;
  /**
   * Reference to problem MITRE CVE ID
   */
  "cveReference"?: string;
  /**
   * Reference to problem issue ID Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "issueId"?: number;
  /**
   * Date of scan result that first reported the vulnerability
   */
  "timeFirstDetected"?: Date;
  /**
   * Date of scan result that most recently reported the vulnerability
   */
  "timeLastDetected"?: Date;
  /**
   * Packages in which the problem is detected
   */
  "vulnerablePackages"?: Array<model.Package>;
}

export namespace HostAgentScanResultProblem {
  export function getJsonObj(obj: HostAgentScanResultProblem): object {
    const jsonObj = {
      ...obj,
      ...{
        "vulnerablePackages": obj.vulnerablePackages
          ? obj.vulnerablePackages.map(item => {
              return model.Package.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: HostAgentScanResultProblem): object {
    const jsonObj = {
      ...obj,
      ...{
        "vulnerablePackages": obj.vulnerablePackages
          ? obj.vulnerablePackages.map(item => {
              return model.Package.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
