/**
 * Scanning API
 * Use the Vulnerability Scanning Service (VSS) API to manage scan recipes, targets, and reports. For more information, see [the Vulnerability Scanning documentation](/iaas/scanning/home.htm).
 * OpenAPI spec version: 20210215
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Agent configuration for host scan agent settings. This model is polymorphic, presenting different configuration options based on selected agent vendor.
 */
export interface HostScanAgentConfiguration {
  /**
   * Vendor to use for the host scan agent.
   */
  "vendorType"?: model.VendorType;

  "vendor": string;
}

export namespace HostScanAgentConfiguration {
  export function getJsonObj(obj: HostScanAgentConfiguration): object {
    const jsonObj = { ...obj, ...{} };

    if (obj && "vendor" in obj && obj.vendor) {
      switch (obj.vendor) {
        case "QUALYS":
          return model.HostScanAgentConfigurationQualys.getJsonObj(
            <model.HostScanAgentConfigurationQualys>(<object>jsonObj),
            true
          );
        case "OCI":
          return model.HostScanAgentConfigurationOCI.getJsonObj(
            <model.HostScanAgentConfigurationOCI>(<object>jsonObj),
            true
          );
        default:
          if (common.LOG.logger) common.LOG.logger.info(`Unknown value for: ${obj.vendor}`);
      }
    }
    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: HostScanAgentConfiguration): object {
    const jsonObj = { ...obj, ...{} };

    if (obj && "vendor" in obj && obj.vendor) {
      switch (obj.vendor) {
        case "QUALYS":
          return model.HostScanAgentConfigurationQualys.getDeserializedJsonObj(
            <model.HostScanAgentConfigurationQualys>(<object>jsonObj),
            true
          );
        case "OCI":
          return model.HostScanAgentConfigurationOCI.getDeserializedJsonObj(
            <model.HostScanAgentConfigurationOCI>(<object>jsonObj),
            true
          );
        default:
          if (common.LOG.logger) common.LOG.logger.info(`Unknown value for: ${obj.vendor}`);
      }
    }
    return jsonObj;
  }
}
