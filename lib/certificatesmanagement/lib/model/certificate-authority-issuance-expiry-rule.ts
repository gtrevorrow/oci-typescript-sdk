/**
 * Certificates Service Management API
 * API for managing certificates.
 * OpenAPI spec version: 20210224
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * A rule that enforces how long certificates or certificate authorities (CAs) issued by this particular CA are valid.
 * You must include either or both {@code leafCertificateMaxValidityDuration} and {@code certificateAuthorityMaxValidityDuration}.
 *
 */
export interface CertificateAuthorityIssuanceExpiryRule extends model.CertificateAuthorityRule {
  /**
   * A property indicating the maximum validity duration, in days, of leaf certificates issued by this CA.
   * Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
   *
   */
  "leafCertificateMaxValidityDuration"?: string;
  /**
   * A property indicating the maximum validity duration, in days, of subordinate CA's issued by this CA.
   * Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
   *
   */
  "certificateAuthorityMaxValidityDuration"?: string;

  "ruleType": string;
}

export namespace CertificateAuthorityIssuanceExpiryRule {
  export function getJsonObj(
    obj: CertificateAuthorityIssuanceExpiryRule,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.CertificateAuthorityRule.getJsonObj(
            obj
          ) as CertificateAuthorityIssuanceExpiryRule)),
      ...{}
    };

    return jsonObj;
  }
  export const ruleType = "CERTIFICATE_AUTHORITY_ISSUANCE_EXPIRY_RULE";
  export function getDeserializedJsonObj(
    obj: CertificateAuthorityIssuanceExpiryRule,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.CertificateAuthorityRule.getDeserializedJsonObj(
            obj
          ) as CertificateAuthorityIssuanceExpiryRule)),
      ...{}
    };

    return jsonObj;
  }
}
