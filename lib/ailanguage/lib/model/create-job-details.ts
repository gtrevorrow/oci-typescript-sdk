/**
 * Language API
 * OCI Language Service solutions can help enterprise customers integrate AI into their products immediately using our proven,
pre-trained and custom models or containers, without a need to set up an house team of AI and ML experts.
This allows enterprises to focus on business drivers and development work rather than AI and ML operations, which shortens the time to market.

 * OpenAPI spec version: 20221001
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Job creation detail which will have documents on which language services need to run prediction along with output folder
 */
export interface CreateJobDetails {
  /**
   * A user-friendly display name for the job.
   */
  "displayName"?: string;
  /**
   * A short description of the job.
   */
  "description"?: string;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the job.
   */
  "compartmentId": string;
  "inputLocation": model.ObjectStoragePrefixLocation | model.ObjectStorageFileNameLocation;
  "inputConfiguration"?: model.InputConfiguration;
  /**
   * training model details
   * For this release only one model is allowed to be input here.
   * One of the three modelType, ModelId, endpointId should be given other wise error will be thrown from API
   *
   */
  "modelMetadataDetails": Array<model.ModelMetadataDetails>;
  "outputLocation": model.ObjectPrefixOutputLocation;
}

export namespace CreateJobDetails {
  export function getJsonObj(obj: CreateJobDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "inputLocation": obj.inputLocation
          ? model.InputLocation.getJsonObj(obj.inputLocation)
          : undefined,
        "inputConfiguration": obj.inputConfiguration
          ? model.InputConfiguration.getJsonObj(obj.inputConfiguration)
          : undefined,
        "modelMetadataDetails": obj.modelMetadataDetails
          ? obj.modelMetadataDetails.map(item => {
              return model.ModelMetadataDetails.getJsonObj(item);
            })
          : undefined,
        "outputLocation": obj.outputLocation
          ? model.ObjectPrefixOutputLocation.getJsonObj(obj.outputLocation)
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: CreateJobDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "inputLocation": obj.inputLocation
          ? model.InputLocation.getDeserializedJsonObj(obj.inputLocation)
          : undefined,
        "inputConfiguration": obj.inputConfiguration
          ? model.InputConfiguration.getDeserializedJsonObj(obj.inputConfiguration)
          : undefined,
        "modelMetadataDetails": obj.modelMetadataDetails
          ? obj.modelMetadataDetails.map(item => {
              return model.ModelMetadataDetails.getDeserializedJsonObj(item);
            })
          : undefined,
        "outputLocation": obj.outputLocation
          ? model.ObjectPrefixOutputLocation.getDeserializedJsonObj(obj.outputLocation)
          : undefined
      }
    };

    return jsonObj;
  }
}
