/**
 * Data Science API
 * Use the Data Science API to organize your data science work, access data and computing resources, and build, train, deploy and manage models and model deployments. For more information, see [Data Science](https://docs.oracle.com/iaas/data-science/using/data-science.htm).

 * OpenAPI spec version: 20190101
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Details for a threshold-based autoscaling policy to enable on the model deployment.
 * In a threshold-based autoscaling policy, an autoscaling action is triggered when a performance metric meets
 * or exceeds a threshold.
 *
 */
export interface ThresholdBasedAutoScalingPolicyDetails extends model.AutoScalingPolicyDetails {
  /**
   * The list of autoscaling policy rules.
   *
   */
  "rules": Array<model.MetricExpressionRule>;
  /**
   * For a threshold-based autoscaling policy, this value is the maximum number of instances the model deployment is allowed
   * to increase to (scale out).
   *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "maximumInstanceCount": number;
  /**
   * For a threshold-based autoscaling policy, this value is the minimum number of instances the model deployment is allowed
   * to decrease to (scale in).
   *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "minimumInstanceCount": number;
  /**
   * For a threshold-based autoscaling policy, this value is the initial number of instances to launch in the model deployment
   * immediately after autoscaling is enabled. Note that anytime this value is updated, the number of instances will be reset
   * to this value. After autoscaling retrieves performance metrics, the number of instances is automatically adjusted from
   * this initial number to a number that is based on the limits that you set.
   *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "initialInstanceCount": number;

  "autoScalingPolicyType": string;
}

export namespace ThresholdBasedAutoScalingPolicyDetails {
  export function getJsonObj(
    obj: ThresholdBasedAutoScalingPolicyDetails,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.AutoScalingPolicyDetails.getJsonObj(
            obj
          ) as ThresholdBasedAutoScalingPolicyDetails)),
      ...{
        "rules": obj.rules
          ? obj.rules.map(item => {
              return model.MetricExpressionRule.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export const autoScalingPolicyType = "THRESHOLD";
  export function getDeserializedJsonObj(
    obj: ThresholdBasedAutoScalingPolicyDetails,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.AutoScalingPolicyDetails.getDeserializedJsonObj(
            obj
          ) as ThresholdBasedAutoScalingPolicyDetails)),
      ...{
        "rules": obj.rules
          ? obj.rules.map(item => {
              return model.MetricExpressionRule.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
