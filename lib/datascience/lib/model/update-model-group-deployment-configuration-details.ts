/**
 * Data Science API
 * Use the Data Science API to organize your data science work, access data and computing resources, and build, train, deploy and manage models and model deployments. For more information, see [Data Science](https://docs.oracle.com/iaas/data-science/using/data-science.htm).

 * OpenAPI spec version: 20190101
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * The model group type deployment for update.
 */
export interface UpdateModelGroupDeploymentConfigurationDetails
  extends model.UpdateModelDeploymentConfigurationDetails {
  /**
   * The type of update operation.
   */
  "updateType"?: UpdateModelGroupDeploymentConfigurationDetails.UpdateType;
  "modelGroupConfigurationDetails"?: model.UpdateModelGroupConfigurationDetails;
  "infrastructureConfigurationDetails"?: model.UpdateInstancePoolInfrastructureConfigurationDetails;
  "environmentConfigurationDetails"?:
    | model.UpdateDefaultModelDeploymentEnvironmentConfigurationDetails
    | model.UpdateOcirModelDeploymentEnvironmentConfigurationDetails;

  "deploymentType": string;
}

export namespace UpdateModelGroupDeploymentConfigurationDetails {
  export enum UpdateType {
    Zdt = "ZDT",
    Live = "LIVE"
  }

  export function getJsonObj(
    obj: UpdateModelGroupDeploymentConfigurationDetails,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.UpdateModelDeploymentConfigurationDetails.getJsonObj(
            obj
          ) as UpdateModelGroupDeploymentConfigurationDetails)),
      ...{
        "modelGroupConfigurationDetails": obj.modelGroupConfigurationDetails
          ? model.UpdateModelGroupConfigurationDetails.getJsonObj(
              obj.modelGroupConfigurationDetails
            )
          : undefined,
        "infrastructureConfigurationDetails": obj.infrastructureConfigurationDetails
          ? model.UpdateInfrastructureConfigurationDetails.getJsonObj(
              obj.infrastructureConfigurationDetails
            )
          : undefined,
        "environmentConfigurationDetails": obj.environmentConfigurationDetails
          ? model.UpdateModelDeploymentEnvironmentConfigurationDetails.getJsonObj(
              obj.environmentConfigurationDetails
            )
          : undefined
      }
    };

    return jsonObj;
  }
  export const deploymentType = "MODEL_GROUP";
  export function getDeserializedJsonObj(
    obj: UpdateModelGroupDeploymentConfigurationDetails,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.UpdateModelDeploymentConfigurationDetails.getDeserializedJsonObj(
            obj
          ) as UpdateModelGroupDeploymentConfigurationDetails)),
      ...{
        "modelGroupConfigurationDetails": obj.modelGroupConfigurationDetails
          ? model.UpdateModelGroupConfigurationDetails.getDeserializedJsonObj(
              obj.modelGroupConfigurationDetails
            )
          : undefined,
        "infrastructureConfigurationDetails": obj.infrastructureConfigurationDetails
          ? model.UpdateInfrastructureConfigurationDetails.getDeserializedJsonObj(
              obj.infrastructureConfigurationDetails
            )
          : undefined,
        "environmentConfigurationDetails": obj.environmentConfigurationDetails
          ? model.UpdateModelDeploymentEnvironmentConfigurationDetails.getDeserializedJsonObj(
              obj.environmentConfigurationDetails
            )
          : undefined
      }
    };

    return jsonObj;
  }
}
