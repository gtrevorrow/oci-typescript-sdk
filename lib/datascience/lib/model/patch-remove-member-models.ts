/**
 * Data Science API
 * Use the Data Science API to organize your data science work, access data and computing resources, and build, train, deploy and manage models and model deployments. For more information, see [Data Science](https://docs.oracle.com/iaas/data-science/using/data-science.htm).

 * OpenAPI spec version: 20190101
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * This will specify the list of source model group models that are not to be associated with the cloned model group.
 */
export interface PatchRemoveMemberModels extends model.PatchInstruction {
  /**
   * Array of inference key and model OCID.
   */
  "values": Array<model.MemberModelDetails>;

  "operation": string;
}

export namespace PatchRemoveMemberModels {
  export function getJsonObj(obj: PatchRemoveMemberModels, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.PatchInstruction.getJsonObj(obj) as PatchRemoveMemberModels)),
      ...{
        "values": obj.values
          ? obj.values.map(item => {
              return model.MemberModelDetails.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export const operation = "REMOVE";
  export function getDeserializedJsonObj(
    obj: PatchRemoveMemberModels,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.PatchInstruction.getDeserializedJsonObj(obj) as PatchRemoveMemberModels)),
      ...{
        "values": obj.values
          ? obj.values.map(item => {
              return model.MemberModelDetails.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
