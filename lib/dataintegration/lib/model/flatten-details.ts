/**
 * Data Integration API
 * Use the Data Integration API to organize your data integration projects, create data flows, pipelines and tasks, and then publish, schedule, and run tasks that extract, transform, and load data. For more information, see [Data Integration](https://docs.oracle.com/iaas/data-integration/home.htm).
 * OpenAPI spec version: 20200430
 * Contact: di_dis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Details for the flatten operator.
 */
export interface FlattenDetails {
  "flattenProjectionPreferences"?: model.FlattenProjectionPreferences;
  /**
   * The string of flatten attribute column name where the flatten process starts.
   */
  "flattenAttributeRoot"?: string;
  /**
   * The string of flatten attribute path in flattenAttributeRoot from upper level to leaf/targeted level concatenated with dot(.).
   */
  "flattenAttributePath"?: string;
  /**
   * The array of flatten columns which are the input to flatten.
   */
  "flattenColumns"?: Array<model.TypedObject>;
  /**
   * The key of the object.
   */
  "key"?: string;
  /**
   * The type of the object.
   */
  "modelType"?: string;
  /**
   * The model version of an object.
   */
  "modelVersion"?: string;
  "parentRef"?: model.ParentReference;
  /**
   * The status of an object that can be set to value 1 for shallow references across objects, other values reserved. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "objectStatus"?: number;
}

export namespace FlattenDetails {
  export function getJsonObj(obj: FlattenDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "flattenProjectionPreferences": obj.flattenProjectionPreferences
          ? model.FlattenProjectionPreferences.getJsonObj(obj.flattenProjectionPreferences)
          : undefined,

        "flattenColumns": obj.flattenColumns
          ? obj.flattenColumns.map(item => {
              return model.TypedObject.getJsonObj(item);
            })
          : undefined,

        "parentRef": obj.parentRef ? model.ParentReference.getJsonObj(obj.parentRef) : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: FlattenDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "flattenProjectionPreferences": obj.flattenProjectionPreferences
          ? model.FlattenProjectionPreferences.getDeserializedJsonObj(
              obj.flattenProjectionPreferences
            )
          : undefined,

        "flattenColumns": obj.flattenColumns
          ? obj.flattenColumns.map(item => {
              return model.TypedObject.getDeserializedJsonObj(item);
            })
          : undefined,

        "parentRef": obj.parentRef
          ? model.ParentReference.getDeserializedJsonObj(obj.parentRef)
          : undefined
      }
    };

    return jsonObj;
  }
}
