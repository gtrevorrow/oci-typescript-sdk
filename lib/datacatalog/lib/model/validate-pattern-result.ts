/**
 * Data Catalog API
 * Use the Data Catalog APIs to collect, organize, find, access, understand, enrich, and activate technical, business, and operational metadata.
For more information, see [Data Catalog](https://docs.oracle.com/iaas/data-catalog/home.htm).

 * OpenAPI spec version: 20190325
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Details regarding the validation of a pattern resource.
 */
export interface ValidatePatternResult {
  /**
   * The message from the pattern validation.
   */
  "message"?: string;
  /**
   * The status returned from the pattern validation.
   */
  "status": string;
  /**
   * The expression used in the pattern validation.
   */
  "expression"?: string;
  /**
   * The prefix used in the pattern validation.
   */
  "filePathPrefix"?: string;
  /**
   * Collection of logical entities derived from the pattern, as applied to a list of file paths.
   */
  "derivedLogicalEntities"?: Array<model.DerivedLogicalEntities>;
}

export namespace ValidatePatternResult {
  export function getJsonObj(obj: ValidatePatternResult): object {
    const jsonObj = {
      ...obj,
      ...{
        "derivedLogicalEntities": obj.derivedLogicalEntities
          ? obj.derivedLogicalEntities.map(item => {
              return model.DerivedLogicalEntities.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: ValidatePatternResult): object {
    const jsonObj = {
      ...obj,
      ...{
        "derivedLogicalEntities": obj.derivedLogicalEntities
          ? obj.derivedLogicalEntities.map(item => {
              return model.DerivedLogicalEntities.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
