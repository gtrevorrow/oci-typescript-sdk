/**
 * Stack Monitoring API
 * Stack Monitoring API.
 * OpenAPI spec version: 20210330
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Pre existing credentials [indicated by the type property in CredentialStore].
 *
 */
export interface PreExistingCredentials extends model.MonitoredResourceCredential {
  "credentialType": string;
}

export namespace PreExistingCredentials {
  export function getJsonObj(obj: PreExistingCredentials, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.MonitoredResourceCredential.getJsonObj(obj) as PreExistingCredentials)),
      ...{}
    };

    return jsonObj;
  }
  export const credentialType = "EXISTING";
  export function getDeserializedJsonObj(
    obj: PreExistingCredentials,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.MonitoredResourceCredential.getDeserializedJsonObj(
            obj
          ) as PreExistingCredentials)),
      ...{}
    };

    return jsonObj;
  }
}
