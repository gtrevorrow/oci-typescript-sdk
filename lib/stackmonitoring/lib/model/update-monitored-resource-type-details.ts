/**
 * Stack Monitoring API
 * Stack Monitoring API.
 * OpenAPI spec version: 20210330
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * The information to be updated for the monitored resource type.
 */
export interface UpdateMonitoredResourceTypeDetails {
  /**
   * Monitored resource type display name.
   */
  "displayName"?: string;
  /**
   * A friendly description.
   */
  "description"?: string;
  /**
   * Metric namespace for resource type.
   */
  "metricNamespace"?: string;
  /**
   * Source type to indicate if the resource is stack monitoring discovered, OCI native resource, etc.
   *
   */
  "sourceType"?: model.SourceType;
  /**
   * Resource Category to indicate the kind of resource type.
   *
   */
  "resourceCategory"?: model.ResourceCategory;
  "metadata"?: model.SystemFormatResourceTypeMetadataDetails;
  /**
   * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
   * Example: {@code {\"bar-key\": \"value\"}}
   *
   */
  "freeformTags"?: { [key: string]: string };
  /**
   * Defined tags for this resource. Each key is predefined and scoped to a namespace.
   * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
   *
   */
  "definedTags"?: { [key: string]: { [key: string]: any } };
}

export namespace UpdateMonitoredResourceTypeDetails {
  export function getJsonObj(obj: UpdateMonitoredResourceTypeDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "metadata": obj.metadata
          ? model.ResourceTypeMetadataDetails.getJsonObj(obj.metadata)
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: UpdateMonitoredResourceTypeDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "metadata": obj.metadata
          ? model.ResourceTypeMetadataDetails.getDeserializedJsonObj(obj.metadata)
          : undefined
      }
    };

    return jsonObj;
  }
}
