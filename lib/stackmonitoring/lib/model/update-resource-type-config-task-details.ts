/**
 * Stack Monitoring API
 * Stack Monitoring API.
 * OpenAPI spec version: 20210330
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Update the availability metrics and the handler configuration for
 * the telegraf/collectd resource types.
 *
 */
export interface UpdateResourceTypeConfigTaskDetails extends model.MonitoredResourceTaskDetails {
  /**
   * Type of the handler.
   */
  "handlerType": model.HandlerType;
  /**
   * A collection of resource type configuration details. User can provide
   * availability proxy metrics list for resource types along with the
   * telegraf/collectd handler configuration for the resource types.
   *
   */
  "resourceTypesConfiguration": Array<model.ResourceTypeConfigDetails>;

  "type": string;
}

export namespace UpdateResourceTypeConfigTaskDetails {
  export function getJsonObj(
    obj: UpdateResourceTypeConfigTaskDetails,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.MonitoredResourceTaskDetails.getJsonObj(
            obj
          ) as UpdateResourceTypeConfigTaskDetails)),
      ...{
        "resourceTypesConfiguration": obj.resourceTypesConfiguration
          ? obj.resourceTypesConfiguration.map(item => {
              return model.ResourceTypeConfigDetails.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export const type = "UPDATE_RESOURCE_TYPE_CONFIGS";
  export function getDeserializedJsonObj(
    obj: UpdateResourceTypeConfigTaskDetails,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.MonitoredResourceTaskDetails.getDeserializedJsonObj(
            obj
          ) as UpdateResourceTypeConfigTaskDetails)),
      ...{
        "resourceTypesConfiguration": obj.resourceTypesConfiguration
          ? obj.resourceTypesConfiguration.map(item => {
              return model.ResourceTypeConfigDetails.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
