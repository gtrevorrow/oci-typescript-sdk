/**
 * Stack Monitoring API
 * Stack Monitoring API.
 * OpenAPI spec version: 20210330
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Specific resource mapping configurations for Agent Extension Handlers.
 */
export interface AgentExtensionHandlerConfiguration {
  /**
   * List of collector/plugin names.
   */
  "collectorTypes": Array<string>;
  /**
   * Metric upload interval in seconds. Any metric sent by telegraf/collectd before the
   * configured interval expires will be dropped.
   *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "metricUploadIntervalInSeconds"?: number;
  /**
   * Resource group string; if not specified, the resource group string will be generated by the handler.
   */
  "telemetryResourceGroup"?: string;
  "telegrafResourceNameConfig"?: model.TelegrafResourceNameConfigurationDetails;
  "collectdResourceNameConfig"?: model.CollectdResourceNameConfigurationDetails;
  "metricNameConfig"?: model.MetricNameConfigurationDetails;
  /**
   * List of AgentExtensionHandlerMetricMappingDetails.
   */
  "metricMappings"?: Array<model.AgentExtensionHandlerMetricMappingDetails>;
  /**
   * List of handler configuration properties
   */
  "handlerProperties"?: Array<model.AgentExtensionHandlerConfigurationProperty>;
}

export namespace AgentExtensionHandlerConfiguration {
  export function getJsonObj(obj: AgentExtensionHandlerConfiguration): object {
    const jsonObj = {
      ...obj,
      ...{
        "telegrafResourceNameConfig": obj.telegrafResourceNameConfig
          ? model.TelegrafResourceNameConfigurationDetails.getJsonObj(
              obj.telegrafResourceNameConfig
            )
          : undefined,
        "collectdResourceNameConfig": obj.collectdResourceNameConfig
          ? model.CollectdResourceNameConfigurationDetails.getJsonObj(
              obj.collectdResourceNameConfig
            )
          : undefined,
        "metricNameConfig": obj.metricNameConfig
          ? model.MetricNameConfigurationDetails.getJsonObj(obj.metricNameConfig)
          : undefined,
        "metricMappings": obj.metricMappings
          ? obj.metricMappings.map(item => {
              return model.AgentExtensionHandlerMetricMappingDetails.getJsonObj(item);
            })
          : undefined,
        "handlerProperties": obj.handlerProperties
          ? obj.handlerProperties.map(item => {
              return model.AgentExtensionHandlerConfigurationProperty.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: AgentExtensionHandlerConfiguration): object {
    const jsonObj = {
      ...obj,
      ...{
        "telegrafResourceNameConfig": obj.telegrafResourceNameConfig
          ? model.TelegrafResourceNameConfigurationDetails.getDeserializedJsonObj(
              obj.telegrafResourceNameConfig
            )
          : undefined,
        "collectdResourceNameConfig": obj.collectdResourceNameConfig
          ? model.CollectdResourceNameConfigurationDetails.getDeserializedJsonObj(
              obj.collectdResourceNameConfig
            )
          : undefined,
        "metricNameConfig": obj.metricNameConfig
          ? model.MetricNameConfigurationDetails.getDeserializedJsonObj(obj.metricNameConfig)
          : undefined,
        "metricMappings": obj.metricMappings
          ? obj.metricMappings.map(item => {
              return model.AgentExtensionHandlerMetricMappingDetails.getDeserializedJsonObj(item);
            })
          : undefined,
        "handlerProperties": obj.handlerProperties
          ? obj.handlerProperties.map(item => {
              return model.AgentExtensionHandlerConfigurationProperty.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
