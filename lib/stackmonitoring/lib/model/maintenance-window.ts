/**
 * Stack Monitoring API
 * Stack Monitoring API.
 * OpenAPI spec version: 20210330
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Maintenance Window object. It contains all the information of the Maintenance window.
 * Used in the Create and Get operations.
 *
 */
export interface MaintenanceWindow {
  /**
   * The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of maintenance window.
   *
   */
  "id": string;
  /**
   * Maintenance Window name.
   */
  "name": string;
  /**
   * Maintenance Window description.
   */
  "description"?: string;
  /**
   * Compartment Identifier [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm).
   *
   */
  "compartmentId": string;
  /**
   * List of resource Ids which are part of the Maintenance Window
   *
   */
  "resources"?: Array<model.CreateMaintenanceWindowResourceDetails>;
  /**
   * List of resource details that are part of the Maintenance Window.
   *
   */
  "resourcesDetails"?: Array<model.MonitoredResourceDetails>;
  /**
   * Lifecycle state of the monitored resource.
   */
  "lifecycleState"?: model.MaintenanceWindowLifecycleState;
  /**
   * Lifecycle Details of the Maintenance Window.
   */
  "lifecycleDetails"?: model.MaintenanceWindowLifecycleDetails;
  "schedule"?: model.RecurrentMaintenanceWindowSchedule | model.OneTimeMaintenanceWindowSchedule;
  /**
   * The time the the maintenance window was created. An RFC3339 formatted datetime string
   *
   */
  "timeCreated"?: Date;
  /**
   * The time the the mainteance window was updated. An RFC3339 formatted datetime string
   *
   */
  "timeUpdated"?: Date;
}

export namespace MaintenanceWindow {
  export function getJsonObj(obj: MaintenanceWindow): object {
    const jsonObj = {
      ...obj,
      ...{
        "resources": obj.resources
          ? obj.resources.map(item => {
              return model.CreateMaintenanceWindowResourceDetails.getJsonObj(item);
            })
          : undefined,
        "resourcesDetails": obj.resourcesDetails
          ? obj.resourcesDetails.map(item => {
              return model.MonitoredResourceDetails.getJsonObj(item);
            })
          : undefined,

        "schedule": obj.schedule
          ? model.MaintenanceWindowSchedule.getJsonObj(obj.schedule)
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: MaintenanceWindow): object {
    const jsonObj = {
      ...obj,
      ...{
        "resources": obj.resources
          ? obj.resources.map(item => {
              return model.CreateMaintenanceWindowResourceDetails.getDeserializedJsonObj(item);
            })
          : undefined,
        "resourcesDetails": obj.resourcesDetails
          ? obj.resourcesDetails.map(item => {
              return model.MonitoredResourceDetails.getDeserializedJsonObj(item);
            })
          : undefined,

        "schedule": obj.schedule
          ? model.MaintenanceWindowSchedule.getDeserializedJsonObj(obj.schedule)
          : undefined
      }
    };

    return jsonObj;
  }
}
