/**
 * Stack Monitoring API
 * Stack Monitoring API.
 * OpenAPI spec version: 20210330
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Specific metric mapping configurations for Agent Extension Handlers.
 */
export interface AgentExtensionHandlerMetricMappingDetails {
  /**
   * Metric name as defined by the collector.
   */
  "collectorMetricName": string;
  /**
   * Metric name to be upload to telemetry.
   */
  "telemetryMetricName"?: string;
  /**
   * Is ignoring this metric.
   */
  "isSkipUpload"?: boolean;
  /**
   * Metric upload interval in seconds. Any metric sent by telegraf/collectd before the
   * configured interval expires will be dropped.
   *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "metricUploadIntervalInSeconds"?: number;
}

export namespace AgentExtensionHandlerMetricMappingDetails {
  export function getJsonObj(obj: AgentExtensionHandlerMetricMappingDetails): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: AgentExtensionHandlerMetricMappingDetails): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
