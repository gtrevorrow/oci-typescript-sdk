/**
 * Load Balancing API
 * API for the Load Balancing service. Use this API to manage load balancers, backend sets, and related items. For more
information, see [Overview of Load Balancing](https://docs.oracle.com/iaas/Content/Balance/Concepts/balanceoverview.htm).

 * OpenAPI spec version: 20170115
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * An ordered list of routing rules.
 * <p>
 **Warning:** Oracle recommends that you avoid using any confidential information when you supply string values using the API.
 *
 */
export interface CreateRoutingPolicyDetails {
  /**
    * The name for this list of routing rules. It must be unique and it cannot be changed. Avoid entering
* confidential information.
* <p>
Example: {@code example_routing_rules}
* 
    */
  "name": string;
  /**
   * The version of the language in which {@code condition} of {@code rules} are composed.
   *
   */
  "conditionLanguageVersion": CreateRoutingPolicyDetails.ConditionLanguageVersion;
  /**
   * The list of routing rules.
   */
  "rules": Array<model.RoutingRule>;
}

export namespace CreateRoutingPolicyDetails {
  export enum ConditionLanguageVersion {
    V1 = "V1"
  }

  export function getJsonObj(obj: CreateRoutingPolicyDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "rules": obj.rules
          ? obj.rules.map(item => {
              return model.RoutingRule.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: CreateRoutingPolicyDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "rules": obj.rules
          ? obj.rules.map(item => {
              return model.RoutingRule.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
