/**
 * Ops Insights API
 * Use the Ops Insights API to perform data extraction operations to obtain database
resource utilization, performance statistics, and reference information. For more information,
see [About Oracle Cloud Infrastructure Ops Insights](https://docs.oracle.com/iaas/en-us/iaas/operations-insights/doc/operations-insights.html).

 * OpenAPI spec version: 20200630
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Projected utilization(High/low) for cpu or storage
 */
export interface ResourceInsightProjectedUtilization {
  /**
   * List of db ids with low usage
   */
  "low": Array<model.ResourceInsightProjectedUtilizationItem>;
  /**
   * List of db ids with high usage
   */
  "high": Array<model.ResourceInsightProjectedUtilizationItem>;
}

export namespace ResourceInsightProjectedUtilization {
  export function getJsonObj(obj: ResourceInsightProjectedUtilization): object {
    const jsonObj = {
      ...obj,
      ...{
        "low": obj.low
          ? obj.low.map(item => {
              return model.ResourceInsightProjectedUtilizationItem.getJsonObj(item);
            })
          : undefined,
        "high": obj.high
          ? obj.high.map(item => {
              return model.ResourceInsightProjectedUtilizationItem.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: ResourceInsightProjectedUtilization): object {
    const jsonObj = {
      ...obj,
      ...{
        "low": obj.low
          ? obj.low.map(item => {
              return model.ResourceInsightProjectedUtilizationItem.getDeserializedJsonObj(item);
            })
          : undefined,
        "high": obj.high
          ? obj.high.map(item => {
              return model.ResourceInsightProjectedUtilizationItem.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
