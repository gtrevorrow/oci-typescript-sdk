/**
 * Digital Assistant Service Instance API
 * API to create and maintain Oracle Digital Assistant service instances.
 * OpenAPI spec version: 20190506
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * The contract guiding the import experience for the consumer and behavior of the resource providers for all resource types in a package.
 */
export interface ImportContract {
  /**
   * A list of resource type specific import contracts, one for each resource type listed in the package definition.
   */
  "importContract"?: Array<model.ResourceTypeImportContract>;
}

export namespace ImportContract {
  export function getJsonObj(obj: ImportContract): object {
    const jsonObj = {
      ...obj,
      ...{
        "importContract": obj.importContract
          ? obj.importContract.map(item => {
              return model.ResourceTypeImportContract.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: ImportContract): object {
    const jsonObj = {
      ...obj,
      ...{
        "importContract": obj.importContract
          ? obj.importContract.map(item => {
              return model.ResourceTypeImportContract.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
