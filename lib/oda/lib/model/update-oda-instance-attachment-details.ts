/**
 * Digital Assistant Service Instance API
 * API to create and maintain Oracle Digital Assistant service instances.
 * OpenAPI spec version: 20190506
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * ODA attachment details to be updated.
 */
export interface UpdateOdaInstanceAttachmentDetails {
  /**
   * Attachment specific metadata. Defined by the target service.
   */
  "attachmentMetadata": string;
  /**
   * List of operations that are restricted while this instance is attached.
   */
  "restrictedOperations": Array<string>;
  "owner": model.OdaInstanceAttachmentOwner;
  /**
   * Simple key-value pair that is applied without any predefined name, type, or scope.
   * Example: {@code {\"bar-key\": \"value\"}}
   *
   */
  "freeformTags"?: { [key: string]: string };
  /**
   * Usage of predefined tag keys. These predefined keys are scoped to namespaces.
   * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
   *
   */
  "definedTags"?: { [key: string]: { [key: string]: any } };
}

export namespace UpdateOdaInstanceAttachmentDetails {
  export function getJsonObj(obj: UpdateOdaInstanceAttachmentDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "owner": obj.owner ? model.OdaInstanceAttachmentOwner.getJsonObj(obj.owner) : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: UpdateOdaInstanceAttachmentDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "owner": obj.owner
          ? model.OdaInstanceAttachmentOwner.getDeserializedJsonObj(obj.owner)
          : undefined
      }
    };

    return jsonObj;
  }
}
