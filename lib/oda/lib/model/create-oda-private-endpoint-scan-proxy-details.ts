/**
 * Digital Assistant Service Instance API
 * API to create and maintain Oracle Digital Assistant service instances.
 * OpenAPI spec version: 20190506
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Properties that are required to create an ODA Private Endpoint Scan Proxy.
 */
export interface CreateOdaPrivateEndpointScanProxyDetails {
  /**
   * Type indicating whether Scan listener is specified by its FQDN or list of IPs
   *
   */
  "scanListenerType": string;
  /**
   * The protocol used for communication between client, scanProxy and RAC's scan listeners
   *
   */
  "protocol": string;
  /**
   * The FQDN/IPs and port information of customer's Real Application Cluster (RAC)'s SCAN listeners.
   *
   */
  "scanListenerInfos": Array<model.ScanListenerInfo>;
}

export namespace CreateOdaPrivateEndpointScanProxyDetails {
  export function getJsonObj(obj: CreateOdaPrivateEndpointScanProxyDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "scanListenerInfos": obj.scanListenerInfos
          ? obj.scanListenerInfos.map(item => {
              return model.ScanListenerInfo.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: CreateOdaPrivateEndpointScanProxyDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "scanListenerInfos": obj.scanListenerInfos
          ? obj.scanListenerInfos.map(item => {
              return model.ScanListenerInfo.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
