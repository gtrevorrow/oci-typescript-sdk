/**
 * Cluster Placement Groups API
 * API for managing cluster placement groups.
 * OpenAPI spec version: 20230801
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Detailed information about the new cluster placement group.
 */
export interface CreateClusterPlacementGroupDetails {
  /**
   * The friendly name of the cluster placement group.
   */
  "name": string;
  /**
   * ClusterPlacementGroup Identifier.
   */
  "clusterPlacementGroupType": model.ClusterPlacementGroupType;
  /**
   * A description of the cluster placement group.
   */
  "description": string;
  /**
   * The availability domain where you want to create the cluster placement group.
   */
  "availabilityDomain": string;
  /**
   * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the cluster placement group.
   *
   */
  "compartmentId": string;
  "placementInstruction"?: model.PlacementInstructionDetails;
  "capabilities"?: model.CapabilitiesCollection;
  /**
   * Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.
   * Example: {@code {\"bar-key\": \"value\"}}
   *
   */
  "freeformTags"?: { [key: string]: string };
  /**
   * Defined tags for this resource. Each key is predefined and scoped to a namespace.
   * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
   *
   */
  "definedTags"?: { [key: string]: { [key: string]: any } };
}

export namespace CreateClusterPlacementGroupDetails {
  export function getJsonObj(obj: CreateClusterPlacementGroupDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "placementInstruction": obj.placementInstruction
          ? model.PlacementInstructionDetails.getJsonObj(obj.placementInstruction)
          : undefined,
        "capabilities": obj.capabilities
          ? model.CapabilitiesCollection.getJsonObj(obj.capabilities)
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: CreateClusterPlacementGroupDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "placementInstruction": obj.placementInstruction
          ? model.PlacementInstructionDetails.getDeserializedJsonObj(obj.placementInstruction)
          : undefined,
        "capabilities": obj.capabilities
          ? model.CapabilitiesCollection.getDeserializedJsonObj(obj.capabilities)
          : undefined
      }
    };

    return jsonObj;
  }
}
