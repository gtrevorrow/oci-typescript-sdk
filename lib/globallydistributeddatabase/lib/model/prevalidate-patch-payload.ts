/**
 * Globally Distributed Database
 * Use the Globally Distributed Database service APIs to create and manage distributed databases.
 * OpenAPI spec version: 20230301
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Payload to prevalidate patch sharded database operation.
 *
 */
export interface PrevalidatePatchPayload extends model.PrevalidatePayload {
  "prevalidatePayload": model.PatchShardedDatabaseDetails;
  /**
   * Sharded database identifier
   */
  "shardedDatabaseId": string;

  "operation": string;
}

export namespace PrevalidatePatchPayload {
  export function getJsonObj(obj: PrevalidatePatchPayload, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.PrevalidatePayload.getJsonObj(obj) as PrevalidatePatchPayload)),
      ...{
        "prevalidatePayload": obj.prevalidatePayload
          ? model.PatchShardedDatabaseDetails.getJsonObj(obj.prevalidatePayload)
          : undefined
      }
    };

    return jsonObj;
  }
  export const operation = "PATCH";
  export function getDeserializedJsonObj(
    obj: PrevalidatePatchPayload,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.PrevalidatePayload.getDeserializedJsonObj(obj) as PrevalidatePatchPayload)),
      ...{
        "prevalidatePayload": obj.prevalidatePayload
          ? model.PatchShardedDatabaseDetails.getDeserializedJsonObj(obj.prevalidatePayload)
          : undefined
      }
    };

    return jsonObj;
  }
}
