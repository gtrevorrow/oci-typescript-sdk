/**
 * Document Understanding API
 * Document AI helps customers perform various analysis on their documents. If a customer has lots of documents, they can process them in batch using asynchronous API endpoints.
 * OpenAPI spec version: 20221109
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Metrics for Document Key Value Detection Model.
 */
export interface KeyValueDetectionModelMetrics extends model.ModelMetrics {
  /**
   * List of metrics entries per label.
   */
  "labelMetricsReport": Array<model.KeyValueDetectionLabelMetricsReport>;
  "overallMetricsReport": model.KeyValueDetectionOverallMetricsReport;

  "modelType": string;
}

export namespace KeyValueDetectionModelMetrics {
  export function getJsonObj(
    obj: KeyValueDetectionModelMetrics,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.ModelMetrics.getJsonObj(obj) as KeyValueDetectionModelMetrics)),
      ...{
        "labelMetricsReport": obj.labelMetricsReport
          ? obj.labelMetricsReport.map(item => {
              return model.KeyValueDetectionLabelMetricsReport.getJsonObj(item);
            })
          : undefined,
        "overallMetricsReport": obj.overallMetricsReport
          ? model.KeyValueDetectionOverallMetricsReport.getJsonObj(obj.overallMetricsReport)
          : undefined
      }
    };

    return jsonObj;
  }
  export const modelType = "KEY_VALUE_EXTRACTION";
  export function getDeserializedJsonObj(
    obj: KeyValueDetectionModelMetrics,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.ModelMetrics.getDeserializedJsonObj(obj) as KeyValueDetectionModelMetrics)),
      ...{
        "labelMetricsReport": obj.labelMetricsReport
          ? obj.labelMetricsReport.map(item => {
              return model.KeyValueDetectionLabelMetricsReport.getDeserializedJsonObj(item);
            })
          : undefined,
        "overallMetricsReport": obj.overallMetricsReport
          ? model.KeyValueDetectionOverallMetricsReport.getDeserializedJsonObj(
              obj.overallMetricsReport
            )
          : undefined
      }
    };

    return jsonObj;
  }
}
