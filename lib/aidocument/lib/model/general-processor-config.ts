/**
 * Document Understanding API
 * Document AI helps customers perform various analysis on their documents. If a customer has lots of documents, they can process them in batch using asynchronous API endpoints.
 * OpenAPI spec version: 20221109
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * The configuration of a general processor.
 */
export interface GeneralProcessorConfig extends model.ProcessorConfig {
  /**
   * The document type.
   */
  "documentType"?: model.DocumentType;
  /**
   * The types of document analysis requested.
   */
  "features": Array<model.DocumentFeature>;
  /**
   * Whether or not to generate a ZIP file containing the results.
   */
  "isZipOutputEnabled"?: boolean;
  /**
   * The document language, abbreviated according to the BCP 47 Language-Tag syntax.
   */
  "language"?: string;

  "processorType": string;
}

export namespace GeneralProcessorConfig {
  export function getJsonObj(obj: GeneralProcessorConfig, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.ProcessorConfig.getJsonObj(obj) as GeneralProcessorConfig)),
      ...{
        "features": obj.features
          ? obj.features.map(item => {
              return model.DocumentFeature.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export const processorType = "GENERAL";
  export function getDeserializedJsonObj(
    obj: GeneralProcessorConfig,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.ProcessorConfig.getDeserializedJsonObj(obj) as GeneralProcessorConfig)),
      ...{
        "features": obj.features
          ? obj.features.map(item => {
              return model.DocumentFeature.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
