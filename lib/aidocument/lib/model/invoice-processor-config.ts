/**
 * Document Understanding API
 * Document AI helps customers perform various analysis on their documents. If a customer has lots of documents, they can process them in batch using asynchronous API endpoints.
 * OpenAPI spec version: 20221109
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * The configuration of an invoice processor.
 */
export interface InvoiceProcessorConfig extends model.ProcessorConfig {
  /**
   * Unique identifier custom model OCID that should be used for inference.
   */
  "modelId"?: string;
  "normalizationFields": model.NormalizationFields;

  "processorType": string;
}

export namespace InvoiceProcessorConfig {
  export function getJsonObj(obj: InvoiceProcessorConfig, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.ProcessorConfig.getJsonObj(obj) as InvoiceProcessorConfig)),
      ...{
        "normalizationFields": obj.normalizationFields
          ? model.NormalizationFields.getJsonObj(obj.normalizationFields)
          : undefined
      }
    };

    return jsonObj;
  }
  export const processorType = "INVOICE";
  export function getDeserializedJsonObj(
    obj: InvoiceProcessorConfig,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.ProcessorConfig.getDeserializedJsonObj(obj) as InvoiceProcessorConfig)),
      ...{
        "normalizationFields": obj.normalizationFields
          ? model.NormalizationFields.getDeserializedJsonObj(obj.normalizationFields)
          : undefined
      }
    };

    return jsonObj;
  }
}
