/**
 * GoldenGate API
 * Use the Oracle Cloud Infrastructure GoldenGate APIs to perform data replication operations.

 * OpenAPI spec version: 20200407
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Represents the storage of given type used in an Iceberg connection.
 *
 */
export interface IcebergStorage {
  "storageType": string;
}

export namespace IcebergStorage {
  export function getJsonObj(obj: IcebergStorage): object {
    const jsonObj = { ...obj, ...{} };

    if (obj && "storageType" in obj && obj.storageType) {
      switch (obj.storageType) {
        case "AMAZON_S3":
          return model.AmazonS3IcebergStorage.getJsonObj(
            <model.AmazonS3IcebergStorage>(<object>jsonObj),
            true
          );
        case "AZURE_DATA_LAKE_STORAGE":
          return model.AzureDataLakeStorageIcebergStorage.getJsonObj(
            <model.AzureDataLakeStorageIcebergStorage>(<object>jsonObj),
            true
          );
        case "GOOGLE_CLOUD_STORAGE":
          return model.GoogleCloudStorageIcebergStorage.getJsonObj(
            <model.GoogleCloudStorageIcebergStorage>(<object>jsonObj),
            true
          );
        default:
          if (common.LOG.logger) common.LOG.logger.info(`Unknown value for: ${obj.storageType}`);
      }
    }
    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: IcebergStorage): object {
    const jsonObj = { ...obj, ...{} };

    if (obj && "storageType" in obj && obj.storageType) {
      switch (obj.storageType) {
        case "AMAZON_S3":
          return model.AmazonS3IcebergStorage.getDeserializedJsonObj(
            <model.AmazonS3IcebergStorage>(<object>jsonObj),
            true
          );
        case "AZURE_DATA_LAKE_STORAGE":
          return model.AzureDataLakeStorageIcebergStorage.getDeserializedJsonObj(
            <model.AzureDataLakeStorageIcebergStorage>(<object>jsonObj),
            true
          );
        case "GOOGLE_CLOUD_STORAGE":
          return model.GoogleCloudStorageIcebergStorage.getDeserializedJsonObj(
            <model.GoogleCloudStorageIcebergStorage>(<object>jsonObj),
            true
          );
        default:
          if (common.LOG.logger) common.LOG.logger.info(`Unknown value for: ${obj.storageType}`);
      }
    }
    return jsonObj;
  }
}
