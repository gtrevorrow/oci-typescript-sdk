/**
 * Identity and Access Management Service API
 * Use the Identity and Access Management Service API to manage users, groups, identity domains, compartments, policies, tagging, and limits. For information about managing users, groups, compartments, and policies, see [Identity and Access Management (without identity domains)](/iaas/Content/Identity/Concepts/overview.htm). For information about tagging and service limits, see [Tagging](/iaas/Content/Tagging/Concepts/taggingoverview.htm) and [Service Limits](/iaas/Content/General/Concepts/servicelimits.htm). For information about creating, modifying, and deleting identity domains, see [Identity and Access Management (with identity domains)](/iaas/Content/Identity/home.htm).
 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

export interface BulkEditTagsDetails {
  /**
   * The OCID of the compartment where the bulk tag edit request is submitted.
   *
   */
  "compartmentId": string;
  /**
   * The resources to be updated.
   *
   */
  "resources": Array<model.BulkEditResource>;
  /**
   * The operations associated with the request to bulk edit tags.
   *
   */
  "bulkEditOperations": Array<model.BulkEditOperationDetails>;
}

export namespace BulkEditTagsDetails {
  export function getJsonObj(obj: BulkEditTagsDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "resources": obj.resources
          ? obj.resources.map(item => {
              return model.BulkEditResource.getJsonObj(item);
            })
          : undefined,
        "bulkEditOperations": obj.bulkEditOperations
          ? obj.bulkEditOperations.map(item => {
              return model.BulkEditOperationDetails.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: BulkEditTagsDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "resources": obj.resources
          ? obj.resources.map(item => {
              return model.BulkEditResource.getDeserializedJsonObj(item);
            })
          : undefined,
        "bulkEditOperations": obj.bulkEditOperations
          ? obj.bulkEditOperations.map(item => {
              return model.BulkEditOperationDetails.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
