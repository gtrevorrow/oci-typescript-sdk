/**
 * Network Firewall API
 * Use the Network Firewall API to create network firewalls and configure policies that regulates network traffic in and across VCNs.
 * OpenAPI spec version: 20230501
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * A Nat Rule is used to define to which traffic NAT should be applied by the firewall.
 *
 */
export interface NatV4NatRule extends model.NatRule {
  "condition": model.NatRuleMatchCriteria;
  /**
   * action:
   * <p>
   * DIPP_SRC_NAT - Dynamic-ip-port source NAT.
   *
   */
  "action": model.NatV4ActionType;

  "type": string;
}

export namespace NatV4NatRule {
  export function getJsonObj(obj: NatV4NatRule, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj ? obj : (model.NatRule.getJsonObj(obj) as NatV4NatRule)),
      ...{
        "condition": obj.condition
          ? model.NatRuleMatchCriteria.getJsonObj(obj.condition)
          : undefined
      }
    };

    return jsonObj;
  }
  export const type = "NATV4";
  export function getDeserializedJsonObj(obj: NatV4NatRule, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj ? obj : (model.NatRule.getDeserializedJsonObj(obj) as NatV4NatRule)),
      ...{
        "condition": obj.condition
          ? model.NatRuleMatchCriteria.getDeserializedJsonObj(obj.condition)
          : undefined
      }
    };

    return jsonObj;
  }
}
