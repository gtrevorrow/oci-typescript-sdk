/**
 * OS Management Hub API
 * Use the OS Management Hub API to manage and monitor updates and patches for instances in OCI, your private data center, or 3rd-party clouds. 
For more information, see [Overview of OS Management Hub](https://docs.cloud.oracle.com/iaas/osmh/doc/overview.htm).

 * OpenAPI spec version: 20220901
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Provides information about the management station, including name, state, and configuration.
 */
export interface ManagementStation {
  /**
   * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management station.
   */
  "id": string;
  /**
   * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the instance that is acting as the management station.
   */
  "managedInstanceId"?: string;
  /**
   * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the management station.
   */
  "compartmentId": string;
  /**
   * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the scheduled job for the mirror sync.
   */
  "scheduledJobId"?: string;
  /**
   * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the registration profile used for the management station.
   */
  "profileId"?: string;
  /**
   * A user-friendly name for the management station.
   */
  "displayName": string;
  /**
   * User-specified description for the management station.
   */
  "description"?: string;
  /**
   * Hostname of the management station.
   */
  "hostname": string;
  /**
   * Current state of the mirror sync for the management station.
   */
  "overallState"?: model.OverallState;
  /**
   * A decimal number representing the progress of the current mirror sync. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "overallPercentage"?: number;
  /**
   * A decimal number representing the amount of mirror capacity used by the sync. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "mirrorCapacity"?: number;
  /**
   * The number of software sources that the station is mirroring. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "totalMirrors"?: number;
  "mirrorSyncStatus"?: model.MirrorSyncStatus;
  "proxy": model.ProxyConfiguration;
  "mirror": model.MirrorConfiguration;
  "health"?: model.StationHealth;
  /**
   * The current state of the management station.
   */
  "lifecycleState"?: ManagementStation.LifecycleState;
  /**
   * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
   * For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
   * Example: {@code {\"Department\": \"Finance\"}}
   *
   */
  "freeformTags"?: { [key: string]: string };
  /**
   * Defined tags for this resource. Each key is predefined and scoped to a namespace.
   * For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
   * Example: {@code {\"Operations\": {\"CostCenter\": \"42\"}}}
   *
   */
  "definedTags"?: { [key: string]: { [key: string]: any } };
  /**
   * System tags for this resource. Each key is predefined and scoped to a namespace.
   * Example: {@code {\"orcl-cloud\": {\"free-tier-retained\": \"true\"}}}
   *
   */
  "systemTags"?: { [key: string]: { [key: string]: any } };
}

export namespace ManagementStation {
  export enum LifecycleState {
    Creating = "CREATING",
    Updating = "UPDATING",
    Active = "ACTIVE",
    Deleting = "DELETING",
    Deleted = "DELETED",
    Failed = "FAILED",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: ManagementStation): object {
    const jsonObj = {
      ...obj,
      ...{
        "mirrorSyncStatus": obj.mirrorSyncStatus
          ? model.MirrorSyncStatus.getJsonObj(obj.mirrorSyncStatus)
          : undefined,
        "proxy": obj.proxy ? model.ProxyConfiguration.getJsonObj(obj.proxy) : undefined,
        "mirror": obj.mirror ? model.MirrorConfiguration.getJsonObj(obj.mirror) : undefined,
        "health": obj.health ? model.StationHealth.getJsonObj(obj.health) : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: ManagementStation): object {
    const jsonObj = {
      ...obj,
      ...{
        "mirrorSyncStatus": obj.mirrorSyncStatus
          ? model.MirrorSyncStatus.getDeserializedJsonObj(obj.mirrorSyncStatus)
          : undefined,
        "proxy": obj.proxy ? model.ProxyConfiguration.getDeserializedJsonObj(obj.proxy) : undefined,
        "mirror": obj.mirror
          ? model.MirrorConfiguration.getDeserializedJsonObj(obj.mirror)
          : undefined,
        "health": obj.health ? model.StationHealth.getDeserializedJsonObj(obj.health) : undefined
      }
    };

    return jsonObj;
  }
}
