/**
 * OS Management Hub API
 * Use the OS Management Hub API to manage and monitor updates and patches for instances in OCI, your private data center, or 3rd-party clouds. 
For more information, see [Overview of OS Management Hub](https://docs.cloud.oracle.com/iaas/osmh/doc/overview.htm).

 * OpenAPI spec version: 20220901
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Provides summary information for a managed instance.
 */
export interface ManagedInstanceSummary {
  /**
   * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
   *
   */
  "id": string;
  /**
   * User-friendly name for the managed instance.
   */
  "displayName": string;
  /**
   * User-specified description of the managed instance.
   */
  "description"?: string;
  /**
   * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy this managed instance resides in.
   *
   */
  "tenancyId": string;
  /**
   * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the managed instance.
   *
   */
  "compartmentId": string;
  /**
   * The location of the managed instance.
   */
  "location"?: model.ManagedInstanceLocation;
  /**
   * The CPU architecture type of the managed instance.
   */
  "architecture"?: model.ArchType;
  /**
   * The operating system type of the managed instance.
   */
  "osFamily"?: model.OsFamily;
  /**
   * Current status of the managed instance.
   */
  "status": model.ManagedInstanceStatus;
  "managedInstanceGroup"?: model.Id;
  "lifecycleEnvironment"?: model.Id;
  "lifecycleStage"?: model.Id;
  /**
   * Indicates whether a reboot is required to complete installation of updates.
   */
  "isRebootRequired"?: boolean;
  /**
   * Number of updates available for installation. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "updatesAvailable"?: number;
  /**
   * Whether this managed instance is acting as an on-premises management station.
   */
  "isManagementStation"?: boolean;
  /**
   * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the Oracle Notifications service (ONS) topic. ONS is the channel used to send notifications to the customer.
   *
   */
  "notificationTopicId"?: string;
  "autonomousSettings"?: model.AutonomousSettings;
  /**
   * Indicates whether Autonomous Linux manages this instance.
   */
  "isManagedByAutonomousLinux"?: boolean;
}

export namespace ManagedInstanceSummary {
  export function getJsonObj(obj: ManagedInstanceSummary): object {
    const jsonObj = {
      ...obj,
      ...{
        "managedInstanceGroup": obj.managedInstanceGroup
          ? model.Id.getJsonObj(obj.managedInstanceGroup)
          : undefined,
        "lifecycleEnvironment": obj.lifecycleEnvironment
          ? model.Id.getJsonObj(obj.lifecycleEnvironment)
          : undefined,
        "lifecycleStage": obj.lifecycleStage ? model.Id.getJsonObj(obj.lifecycleStage) : undefined,

        "autonomousSettings": obj.autonomousSettings
          ? model.AutonomousSettings.getJsonObj(obj.autonomousSettings)
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: ManagedInstanceSummary): object {
    const jsonObj = {
      ...obj,
      ...{
        "managedInstanceGroup": obj.managedInstanceGroup
          ? model.Id.getDeserializedJsonObj(obj.managedInstanceGroup)
          : undefined,
        "lifecycleEnvironment": obj.lifecycleEnvironment
          ? model.Id.getDeserializedJsonObj(obj.lifecycleEnvironment)
          : undefined,
        "lifecycleStage": obj.lifecycleStage
          ? model.Id.getDeserializedJsonObj(obj.lifecycleStage)
          : undefined,

        "autonomousSettings": obj.autonomousSettings
          ? model.AutonomousSettings.getDeserializedJsonObj(obj.autonomousSettings)
          : undefined
      }
    };

    return jsonObj;
  }
}
