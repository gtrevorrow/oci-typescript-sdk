/**
 * OS Management Hub API
 * Use the OS Management Hub API to manage and monitor updates and patches for instances in OCI, your private data center, or 3rd-party clouds. 
For more information, see [Overview of OS Management Hub](https://docs.cloud.oracle.com/iaas/osmh/doc/overview.htm).

 * OpenAPI spec version: 20220901
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * An object that defines a work request.
 */
export interface WorkRequest {
  /**
   * Type of the work request.
   */
  "operationType": model.WorkRequestOperationType;
  /**
   * Status of the work request.
   */
  "status": model.OperationStatus;
  /**
   * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the work request.
   */
  "id": string;
  /**
   * A short description about the work request.
   */
  "description"?: string;
  /**
   * A short display name for the work request.
   */
  "displayName"?: string;
  /**
   * A progress or error message, if there is any.
   */
  "message"?: string;
  /**
   * The OCID of the parent work request, if there is any.
   */
  "parentId"?: string;
  /**
   * The list of OCIDs for the child work requests.
   */
  "childrenId"?: Array<string>;
  /**
   * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the work request.
   * Work requests should be scoped to the same compartment as the resource it affects.
   * If the work request affects multiple resources the different compartments, the services selects the compartment of the primary resource.
   *
   */
  "compartmentId": string;
  /**
   * The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the resources affected by the work request.
   */
  "resources": Array<model.WorkRequestResource>;
  /**
   * A list of package names to be installed, updated, or removed.
   */
  "packageNames"?: Array<string>;
  /**
   * The UUIDs of the target Windows update (only used when operation type is INSTALL_WINDOWS_UPDATES).
   */
  "windowsUpdateNames"?: Array<string>;
  /**
   * The list of appstream modules being operated on.
   */
  "moduleSpecs"?: Array<model.ModuleSpecDetails>;
  /**
   * The percentage complete of the operation tracked by this work request. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "percentComplete": number;
  /**
   * The date and time the work request was created (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
   *
   */
  "timeCreated": Date;
  /**
   * The date and time the work request started (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
   *
   */
  "timeUpdated"?: Date;
  /**
   * The date and time the work request started (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
   *
   */
  "timeStarted"?: Date;
  /**
   * The date and time the work request completed (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
   *
   */
  "timeFinished"?: Date;
  /**
   * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource that initiated the work request.
   */
  "initiatorId"?: string;
  "managementStation"?: model.WorkRequestManagementStationDetails;
  /**
   * The scheduled date and time to retry the work request (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
   */
  "timeScheduled"?: Date;
  /**
   * The location of the bundle in the filesystem of the resource associated to this work request.
   *
   */
  "contentLocation"?: string;
  /**
   * The event id of the content. This property is required when the work request type is IMPORT_CONTENT or REMOVE_CONTENT.
   *
   */
  "eventId"?: string;
  /**
   * The EventFingerprint associated with the content. This property is required when the work request type is IMPORT_CONTENT or REMOVE_CONTENT.
   *
   */
  "contentChecksum"?: string;
  /**
   * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the original work request that is being retried.
   *
   */
  "retryOfId"?: string;
  /**
   * Indicates whether this work request is managed by the Autonomous Linux service.
   */
  "retryIntervals"?: Array<number>;
  /**
   * Indicates whether this work request is managed by the Autonomous Linux service.
   */
  "isManagedByAutonomousLinux"?: boolean;
}

export namespace WorkRequest {
  export function getJsonObj(obj: WorkRequest): object {
    const jsonObj = {
      ...obj,
      ...{
        "resources": obj.resources
          ? obj.resources.map(item => {
              return model.WorkRequestResource.getJsonObj(item);
            })
          : undefined,

        "moduleSpecs": obj.moduleSpecs
          ? obj.moduleSpecs.map(item => {
              return model.ModuleSpecDetails.getJsonObj(item);
            })
          : undefined,

        "managementStation": obj.managementStation
          ? model.WorkRequestManagementStationDetails.getJsonObj(obj.managementStation)
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: WorkRequest): object {
    const jsonObj = {
      ...obj,
      ...{
        "resources": obj.resources
          ? obj.resources.map(item => {
              return model.WorkRequestResource.getDeserializedJsonObj(item);
            })
          : undefined,

        "moduleSpecs": obj.moduleSpecs
          ? obj.moduleSpecs.map(item => {
              return model.ModuleSpecDetails.getDeserializedJsonObj(item);
            })
          : undefined,

        "managementStation": obj.managementStation
          ? model.WorkRequestManagementStationDetails.getDeserializedJsonObj(obj.managementStation)
          : undefined
      }
    };

    return jsonObj;
  }
}
