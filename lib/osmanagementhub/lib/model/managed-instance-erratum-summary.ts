/**
 * OS Management Hub API
 * Use the OS Management Hub API to manage and monitor updates and patches for instances in OCI, your private data center, or 3rd-party clouds. 
For more information, see [Overview of OS Management Hub](https://docs.cloud.oracle.com/iaas/osmh/doc/overview.htm).

 * OpenAPI spec version: 20220901
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Provides summary information about an erratum associated with a managed instance.
 */
export interface ManagedInstanceErratumSummary {
  /**
   * The identifier of the erratum.
   */
  "name": string;
  /**
   * The advisory type of the erratum.
   */
  "advisoryType": model.ClassificationTypes;
  /**
   * The date and time the package was issued by a providing erratum (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
   *
   */
  "timeIssued"?: Date;
  /**
   * A summary description of the erratum.
   */
  "synopsis"?: string;
  /**
   * The list of CVEs applicable to this erratum.
   */
  "relatedCves"?: Array<string>;
  /**
   * The list of packages affected by this erratum.
   */
  "packages": Array<model.PackageNameSummary>;
}

export namespace ManagedInstanceErratumSummary {
  export function getJsonObj(obj: ManagedInstanceErratumSummary): object {
    const jsonObj = {
      ...obj,
      ...{
        "packages": obj.packages
          ? obj.packages.map(item => {
              return model.PackageNameSummary.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: ManagedInstanceErratumSummary): object {
    const jsonObj = {
      ...obj,
      ...{
        "packages": obj.packages
          ? obj.packages.map(item => {
              return model.PackageNameSummary.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
