/**
 * Exadata Fleet Update service API
 * Use the Exadata Fleet Update service to patch large collections of components directly,
as a single entity, orchestrating the maintenance actions to update all chosen components in the stack in a single cycle.

 * OpenAPI spec version: 20220528
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Service Availability Factor batching strategy details to use during PRECHECK and APPLY Cycle Actions.
 *
 */
export interface UpdateServiceAvailabilityFactorBatchingStrategyDetails
  extends model.UpdateBatchingStrategyDetails {
  /**
   * Percentage of availability in the service during the Patch operation.
   *  Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "percentage"?: number;
  /**
   * True to force rolling patching.
   *
   */
  "isForceRolling"?: boolean;

  "type": string;
}

export namespace UpdateServiceAvailabilityFactorBatchingStrategyDetails {
  export function getJsonObj(
    obj: UpdateServiceAvailabilityFactorBatchingStrategyDetails,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.UpdateBatchingStrategyDetails.getJsonObj(
            obj
          ) as UpdateServiceAvailabilityFactorBatchingStrategyDetails)),
      ...{}
    };

    return jsonObj;
  }
  export const type = "SERVICE_AVAILABILITY_FACTOR";
  export function getDeserializedJsonObj(
    obj: UpdateServiceAvailabilityFactorBatchingStrategyDetails,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.UpdateBatchingStrategyDetails.getDeserializedJsonObj(
            obj
          ) as UpdateServiceAvailabilityFactorBatchingStrategyDetails)),
      ...{}
    };

    return jsonObj;
  }
}
