/**
 * Anomaly Detection API
 * OCI AI Service solutions can help Enterprise customers integrate AI into their products immediately by using our proven,
pre-trained/custom models or containers, and without a need to set up in house team of AI and ML experts.
This allows enterprises to focus on business drivers and development work rather than AI/ML operations, shortening the time to market.

 * OpenAPI spec version: 20210101
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Detect anomaly job output details.
 */
export interface OutputDetails {
  "outputType": string;
}

export namespace OutputDetails {
  export function getJsonObj(obj: OutputDetails): object {
    const jsonObj = { ...obj, ...{} };

    if (obj && "outputType" in obj && obj.outputType) {
      switch (obj.outputType) {
        case "OBJECT_STORAGE":
          return model.ObjectStoreOutputDetails.getJsonObj(
            <model.ObjectStoreOutputDetails>(<object>jsonObj),
            true
          );
        default:
          if (common.LOG.logger) common.LOG.logger.info(`Unknown value for: ${obj.outputType}`);
      }
    }
    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: OutputDetails): object {
    const jsonObj = { ...obj, ...{} };

    if (obj && "outputType" in obj && obj.outputType) {
      switch (obj.outputType) {
        case "OBJECT_STORAGE":
          return model.ObjectStoreOutputDetails.getDeserializedJsonObj(
            <model.ObjectStoreOutputDetails>(<object>jsonObj),
            true
          );
        default:
          if (common.LOG.logger) common.LOG.logger.info(`Unknown value for: ${obj.outputType}`);
      }
    }
    return jsonObj;
  }
}
