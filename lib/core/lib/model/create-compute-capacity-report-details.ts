/**
 * Core Services API
 * Use the Core Services API to manage resources such as virtual cloud networks (VCNs),
compute instances, and block storage volumes. For more information, see the console
documentation for the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services.
The required permissions are documented in the
[Details for the Core Services](/iaas/Content/Identity/Reference/corepolicyreference.htm) article.

 * OpenAPI spec version: 20160918
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * The data to create a report of available Compute capacity.
 *
 */
export interface CreateComputeCapacityReportDetails {
  /**
   * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the compartment. This should always be the root
   * compartment.
   *
   */
  "compartmentId": string;
  /**
    * The availability domain for the capacity report.
* <p>
Example: {@code Uocm:PHX-AD-1}
* 
    */
  "availabilityDomain": string;
  /**
   * Information about the shapes in the capacity report.
   *
   */
  "shapeAvailabilities": Array<model.CreateCapacityReportShapeAvailabilityDetails>;
}

export namespace CreateComputeCapacityReportDetails {
  export function getJsonObj(obj: CreateComputeCapacityReportDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "shapeAvailabilities": obj.shapeAvailabilities
          ? obj.shapeAvailabilities.map(item => {
              return model.CreateCapacityReportShapeAvailabilityDetails.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: CreateComputeCapacityReportDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "shapeAvailabilities": obj.shapeAvailabilities
          ? obj.shapeAvailabilities.map(item => {
              return model.CreateCapacityReportShapeAvailabilityDetails.getDeserializedJsonObj(
                item
              );
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
