/**
 * Core Services API
 * Use the Core Services API to manage resources such as virtual cloud networks (VCNs),
compute instances, and block storage volumes. For more information, see the console
documentation for the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services.
The required permissions are documented in the
[Details for the Core Services](/iaas/Content/Identity/Reference/corepolicyreference.htm) article.

 * OpenAPI spec version: 20160918
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * This resource provides redundancy level details for the virtual circuit. For more about redundancy, see [FastConnect Redundancy Best Practices](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/fastconnectresiliency.htm).
 *
 */
export interface VirtualCircuitRedundancyMetadata {
  /**
   * The configured redundancy level of the virtual circuit.
   */
  "configuredRedundancyLevel"?: VirtualCircuitRedundancyMetadata.ConfiguredRedundancyLevel;
  /**
   * Indicates if the configured level is met for IPv4 BGP redundancy.
   *
   */
  "ipv4bgpSessionRedundancyStatus"?: VirtualCircuitRedundancyMetadata.Ipv4bgpSessionRedundancyStatus;
  /**
   * Indicates if the configured level is met for IPv6 BGP redundancy.
   *
   */
  "ipv6bgpSessionRedundancyStatus"?: VirtualCircuitRedundancyMetadata.Ipv6bgpSessionRedundancyStatus;
}

export namespace VirtualCircuitRedundancyMetadata {
  export enum ConfiguredRedundancyLevel {
    Device = "DEVICE",
    Pop = "POP",
    Region = "REGION",
    NonRedundant = "NON_REDUNDANT",
    Pending = "PENDING",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum Ipv4bgpSessionRedundancyStatus {
    ConfigurationMatch = "CONFIGURATION_MATCH",
    ConfigurationMismatch = "CONFIGURATION_MISMATCH",
    NotMetSla = "NOT_MET_SLA",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export enum Ipv6bgpSessionRedundancyStatus {
    ConfigurationMatch = "CONFIGURATION_MATCH",
    ConfigurationMismatch = "CONFIGURATION_MISMATCH",
    NotMetSla = "NOT_MET_SLA",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: VirtualCircuitRedundancyMetadata): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: VirtualCircuitRedundancyMetadata): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
