/**
 * Logging Management API
 * Use the Logging Management API to create, read, list, update, move and delete
log groups, log objects, log saved searches, and agent configurations.

For more information, see [Logging Overview](/iaas/Content/Logging/Concepts/loggingoverview.htm).

 * OpenAPI spec version: 20200531
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Logging grep filter object greps events by the values of specified fields.
 * Ref: https://docs.fluentd.org/filter/grep
 *
 */
export interface UnifiedAgentLoggingGrepFilter extends model.UnifiedAgentLoggingFilter {
  /**
   * A list of filtering rules to include logs
   */
  "allowList"?: Array<model.GrepFilterAllowRule>;
  /**
   * A list of filtering rules to reject logs
   */
  "denyList"?: Array<model.GrepFilterDenyRule>;

  "filterType": string;
}

export namespace UnifiedAgentLoggingGrepFilter {
  export function getJsonObj(
    obj: UnifiedAgentLoggingGrepFilter,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.UnifiedAgentLoggingFilter.getJsonObj(obj) as UnifiedAgentLoggingGrepFilter)),
      ...{
        "allowList": obj.allowList
          ? obj.allowList.map(item => {
              return model.GrepFilterAllowRule.getJsonObj(item);
            })
          : undefined,
        "denyList": obj.denyList
          ? obj.denyList.map(item => {
              return model.GrepFilterDenyRule.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export const filterType = "GREP_FILTER";
  export function getDeserializedJsonObj(
    obj: UnifiedAgentLoggingGrepFilter,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.UnifiedAgentLoggingFilter.getDeserializedJsonObj(
            obj
          ) as UnifiedAgentLoggingGrepFilter)),
      ...{
        "allowList": obj.allowList
          ? obj.allowList.map(item => {
              return model.GrepFilterAllowRule.getDeserializedJsonObj(item);
            })
          : undefined,
        "denyList": obj.denyList
          ? obj.denyList.map(item => {
              return model.GrepFilterDenyRule.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
