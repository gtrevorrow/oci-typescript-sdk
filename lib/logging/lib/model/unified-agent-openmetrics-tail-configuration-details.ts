/**
 * Logging Management API
 * Use the Logging Management API to create, read, list, update, move and delete
log groups, log objects, log saved searches, and agent configurations.

For more information, see [Logging Overview](/iaas/Content/Logging/Concepts/loggingoverview.htm).

 * OpenAPI spec version: 20200531
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Unified Agent Openmetrics tail configuration object.
 */
export interface UnifiedAgentOpenmetricsTailConfigurationDetails
  extends model.UnifiedAgentMonitoringApplicationConfigurationDetails {
  /**
   * Tail log source objects.
   */
  "sources": Array<model.UnifiedAgentTailLogSource>;
  "destination": model.UnifiedAgentMonitoringDestination;

  "sourceType": string;
}

export namespace UnifiedAgentOpenmetricsTailConfigurationDetails {
  export function getJsonObj(
    obj: UnifiedAgentOpenmetricsTailConfigurationDetails,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.UnifiedAgentMonitoringApplicationConfigurationDetails.getJsonObj(
            obj
          ) as UnifiedAgentOpenmetricsTailConfigurationDetails)),
      ...{
        "sources": obj.sources
          ? obj.sources.map(item => {
              return model.UnifiedAgentTailLogSource.getJsonObj(item);
            })
          : undefined,
        "destination": obj.destination
          ? model.UnifiedAgentMonitoringDestination.getJsonObj(obj.destination)
          : undefined
      }
    };

    return jsonObj;
  }
  export const sourceType = "TAIL";
  export function getDeserializedJsonObj(
    obj: UnifiedAgentOpenmetricsTailConfigurationDetails,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.UnifiedAgentMonitoringApplicationConfigurationDetails.getDeserializedJsonObj(
            obj
          ) as UnifiedAgentOpenmetricsTailConfigurationDetails)),
      ...{
        "sources": obj.sources
          ? obj.sources.map(item => {
              return model.UnifiedAgentTailLogSource.getDeserializedJsonObj(item);
            })
          : undefined,
        "destination": obj.destination
          ? model.UnifiedAgentMonitoringDestination.getDeserializedJsonObj(obj.destination)
          : undefined
      }
    };

    return jsonObj;
  }
}
