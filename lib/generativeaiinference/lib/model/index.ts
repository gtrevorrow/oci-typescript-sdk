/**
 * Generative AI Service Inference API
 * OCI Generative AI is a fully managed service that provides a set of state-of-the-art, customizable large language models (LLMs) that cover a wide range of use cases for text generation, summarization, and text embeddings. 

Use the Generative AI service inference API to access your custom model endpoints, or to try the out-of-the-box models to [chat](#/EN/generative-ai-inference/latest/ChatResult/Chat), [generate text](#/EN/generative-ai-inference/latest/GenerateTextResult/GenerateText), [summarize](#/EN/generative-ai-inference/latest/SummarizeTextResult/SummarizeText), and [create text embeddings](#/EN/generative-ai-inference/latest/EmbedTextResult/EmbedText).

To use a Generative AI custom model for inference, you must first create an endpoint for that model. Use the [Generative AI service management API](#/EN/generative-ai/latest/) to [create a custom model](#/EN/generative-ai/latest/Model/) by fine-tuning an out-of-the-box model, or a previous version of a custom model, using your own data. Fine-tune the custom model on a [fine-tuning dedicated AI cluster](#/EN/generative-ai/latest/DedicatedAiCluster/). Then, create a [hosting dedicated AI cluster](#/EN/generative-ai/latest/DedicatedAiCluster/) with an [endpoint](#/en/generative-ai/latest/Endpoint/) to host your custom model. For resource management in the Generative AI service, use the [Generative AI service management API](#/EN/generative-ai/latest/).

To learn more about the service, see the [Generative AI documentation](/iaas/Content/generative-ai/home.htm).

 * OpenAPI spec version: 20231130
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as BaseChatRequest from "./base-chat-request";
export import BaseChatRequest = BaseChatRequest.BaseChatRequest;
import * as BaseChatResponse from "./base-chat-response";
export import BaseChatResponse = BaseChatResponse.BaseChatResponse;
import * as ChatChoice from "./chat-choice";
export import ChatChoice = ChatChoice.ChatChoice;
import * as ChatContent from "./chat-content";
export import ChatContent = ChatContent.ChatContent;
import * as ChatDetails from "./chat-details";
export import ChatDetails = ChatDetails.ChatDetails;
import * as ChatResult from "./chat-result";
export import ChatResult = ChatResult.ChatResult;
import * as Choice from "./choice";
export import Choice = Choice.Choice;
import * as Citation from "./citation";
export import Citation = Citation.Citation;
import * as CohereMessage from "./cohere-message";
export import CohereMessage = CohereMessage.CohereMessage;
import * as CohereParameterDefinition from "./cohere-parameter-definition";
export import CohereParameterDefinition = CohereParameterDefinition.CohereParameterDefinition;
import * as CohereResponseFormat from "./cohere-response-format";
export import CohereResponseFormat = CohereResponseFormat.CohereResponseFormat;
import * as CohereTool from "./cohere-tool";
export import CohereTool = CohereTool.CohereTool;
import * as CohereToolCall from "./cohere-tool-call";
export import CohereToolCall = CohereToolCall.CohereToolCall;
import * as CohereToolResult from "./cohere-tool-result";
export import CohereToolResult = CohereToolResult.CohereToolResult;
import * as Document from "./document";
export import Document = Document.Document;
import * as DocumentRank from "./document-rank";
export import DocumentRank = DocumentRank.DocumentRank;
import * as EmbedTextDetails from "./embed-text-details";
export import EmbedTextDetails = EmbedTextDetails.EmbedTextDetails;
import * as EmbedTextResult from "./embed-text-result";
export import EmbedTextResult = EmbedTextResult.EmbedTextResult;
import * as GenerateTextDetails from "./generate-text-details";
export import GenerateTextDetails = GenerateTextDetails.GenerateTextDetails;
import * as GenerateTextResult from "./generate-text-result";
export import GenerateTextResult = GenerateTextResult.GenerateTextResult;
import * as GeneratedText from "./generated-text";
export import GeneratedText = GeneratedText.GeneratedText;
import * as ImageUrl from "./image-url";
export import ImageUrl = ImageUrl.ImageUrl;
import * as LlmInferenceRequest from "./llm-inference-request";
export import LlmInferenceRequest = LlmInferenceRequest.LlmInferenceRequest;
import * as LlmInferenceResponse from "./llm-inference-response";
export import LlmInferenceResponse = LlmInferenceResponse.LlmInferenceResponse;
import * as Logprobs from "./logprobs";
export import Logprobs = Logprobs.Logprobs;
import * as Message from "./message";
export import Message = Message.Message;
import * as RerankTextDetails from "./rerank-text-details";
export import RerankTextDetails = RerankTextDetails.RerankTextDetails;
import * as RerankTextResult from "./rerank-text-result";
export import RerankTextResult = RerankTextResult.RerankTextResult;
import * as SearchQuery from "./search-query";
export import SearchQuery = SearchQuery.SearchQuery;
import * as ServingMode from "./serving-mode";
export import ServingMode = ServingMode.ServingMode;
import * as SummarizeTextDetails from "./summarize-text-details";
export import SummarizeTextDetails = SummarizeTextDetails.SummarizeTextDetails;
import * as SummarizeTextResult from "./summarize-text-result";
export import SummarizeTextResult = SummarizeTextResult.SummarizeTextResult;
import * as TokenLikelihood from "./token-likelihood";
export import TokenLikelihood = TokenLikelihood.TokenLikelihood;
import * as ToolCall from "./tool-call";
export import ToolCall = ToolCall.ToolCall;
import * as ToolChoice from "./tool-choice";
export import ToolChoice = ToolChoice.ToolChoice;
import * as ToolDefinition from "./tool-definition";
export import ToolDefinition = ToolDefinition.ToolDefinition;

import * as AssistantMessage from "./assistant-message";
export import AssistantMessage = AssistantMessage.AssistantMessage;
import * as CohereChatBotMessage from "./cohere-chat-bot-message";
export import CohereChatBotMessage = CohereChatBotMessage.CohereChatBotMessage;
import * as CohereChatRequest from "./cohere-chat-request";
export import CohereChatRequest = CohereChatRequest.CohereChatRequest;
import * as CohereChatResponse from "./cohere-chat-response";
export import CohereChatResponse = CohereChatResponse.CohereChatResponse;
import * as CohereLlmInferenceRequest from "./cohere-llm-inference-request";
export import CohereLlmInferenceRequest = CohereLlmInferenceRequest.CohereLlmInferenceRequest;
import * as CohereLlmInferenceResponse from "./cohere-llm-inference-response";
export import CohereLlmInferenceResponse = CohereLlmInferenceResponse.CohereLlmInferenceResponse;
import * as CohereResponseJsonFormat from "./cohere-response-json-format";
export import CohereResponseJsonFormat = CohereResponseJsonFormat.CohereResponseJsonFormat;
import * as CohereResponseTextFormat from "./cohere-response-text-format";
export import CohereResponseTextFormat = CohereResponseTextFormat.CohereResponseTextFormat;
import * as CohereSystemMessage from "./cohere-system-message";
export import CohereSystemMessage = CohereSystemMessage.CohereSystemMessage;
import * as CohereToolMessage from "./cohere-tool-message";
export import CohereToolMessage = CohereToolMessage.CohereToolMessage;
import * as CohereUserMessage from "./cohere-user-message";
export import CohereUserMessage = CohereUserMessage.CohereUserMessage;
import * as DedicatedServingMode from "./dedicated-serving-mode";
export import DedicatedServingMode = DedicatedServingMode.DedicatedServingMode;
import * as FunctionCall from "./function-call";
export import FunctionCall = FunctionCall.FunctionCall;
import * as FunctionDefinition from "./function-definition";
export import FunctionDefinition = FunctionDefinition.FunctionDefinition;
import * as GenericChatRequest from "./generic-chat-request";
export import GenericChatRequest = GenericChatRequest.GenericChatRequest;
import * as GenericChatResponse from "./generic-chat-response";
export import GenericChatResponse = GenericChatResponse.GenericChatResponse;
import * as ImageContent from "./image-content";
export import ImageContent = ImageContent.ImageContent;
import * as LlamaLlmInferenceRequest from "./llama-llm-inference-request";
export import LlamaLlmInferenceRequest = LlamaLlmInferenceRequest.LlamaLlmInferenceRequest;
import * as LlamaLlmInferenceResponse from "./llama-llm-inference-response";
export import LlamaLlmInferenceResponse = LlamaLlmInferenceResponse.LlamaLlmInferenceResponse;
import * as OnDemandServingMode from "./on-demand-serving-mode";
export import OnDemandServingMode = OnDemandServingMode.OnDemandServingMode;
import * as SystemMessage from "./system-message";
export import SystemMessage = SystemMessage.SystemMessage;
import * as TextContent from "./text-content";
export import TextContent = TextContent.TextContent;
import * as ToolChoiceAuto from "./tool-choice-auto";
export import ToolChoiceAuto = ToolChoiceAuto.ToolChoiceAuto;
import * as ToolChoiceFunction from "./tool-choice-function";
export import ToolChoiceFunction = ToolChoiceFunction.ToolChoiceFunction;
import * as ToolChoiceNone from "./tool-choice-none";
export import ToolChoiceNone = ToolChoiceNone.ToolChoiceNone;
import * as ToolChoiceRequired from "./tool-choice-required";
export import ToolChoiceRequired = ToolChoiceRequired.ToolChoiceRequired;
import * as ToolMessage from "./tool-message";
export import ToolMessage = ToolMessage.ToolMessage;
import * as UserMessage from "./user-message";
export import UserMessage = UserMessage.UserMessage;
