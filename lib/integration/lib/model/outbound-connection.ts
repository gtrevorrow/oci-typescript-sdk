/**
 * Oracle Integration API
 * Oracle Integration API.
 * OpenAPI spec version: 20190131
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Base representation for Outbound Connection (Reverse Connection).
 *
 */
export interface OutboundConnection {
  "outboundConnectionType": string;
}

export namespace OutboundConnection {
  export function getJsonObj(obj: OutboundConnection): object {
    const jsonObj = { ...obj, ...{} };

    if (obj && "outboundConnectionType" in obj && obj.outboundConnectionType) {
      switch (obj.outboundConnectionType) {
        case "PRIVATE_ENDPOINT":
          return model.PrivateEndpointOutboundConnection.getJsonObj(
            <model.PrivateEndpointOutboundConnection>(<object>jsonObj),
            true
          );
        case "NONE":
          return model.NoneOutboundConnection.getJsonObj(
            <model.NoneOutboundConnection>(<object>jsonObj),
            true
          );
        default:
          if (common.LOG.logger)
            common.LOG.logger.info(`Unknown value for: ${obj.outboundConnectionType}`);
      }
    }
    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: OutboundConnection): object {
    const jsonObj = { ...obj, ...{} };

    if (obj && "outboundConnectionType" in obj && obj.outboundConnectionType) {
      switch (obj.outboundConnectionType) {
        case "PRIVATE_ENDPOINT":
          return model.PrivateEndpointOutboundConnection.getDeserializedJsonObj(
            <model.PrivateEndpointOutboundConnection>(<object>jsonObj),
            true
          );
        case "NONE":
          return model.NoneOutboundConnection.getDeserializedJsonObj(
            <model.NoneOutboundConnection>(<object>jsonObj),
            true
          );
        default:
          if (common.LOG.logger)
            common.LOG.logger.info(`Unknown value for: ${obj.outboundConnectionType}`);
      }
    }
    return jsonObj;
  }
}
