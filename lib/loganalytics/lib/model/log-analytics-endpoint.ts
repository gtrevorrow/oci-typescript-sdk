/**
 * LogAnalytics API
 * The LogAnalytics API for the LogAnalytics service.

 * OpenAPI spec version: 20200601
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Endpoint configuration for REST API based log collection.
 */
export interface LogAnalyticsEndpoint {
  "endpointType": string;
}

export namespace LogAnalyticsEndpoint {
  export function getJsonObj(obj: LogAnalyticsEndpoint): object {
    const jsonObj = { ...obj, ...{} };

    if (obj && "endpointType" in obj && obj.endpointType) {
      switch (obj.endpointType) {
        case "LOG_LIST":
          return model.LogListTypeEndpoint.getJsonObj(
            <model.LogListTypeEndpoint>(<object>jsonObj),
            true
          );
        case "LOG":
          return model.LogTypeEndpoint.getJsonObj(<model.LogTypeEndpoint>(<object>jsonObj), true);
        default:
          if (common.LOG.logger) common.LOG.logger.info(`Unknown value for: ${obj.endpointType}`);
      }
    }
    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: LogAnalyticsEndpoint): object {
    const jsonObj = { ...obj, ...{} };

    if (obj && "endpointType" in obj && obj.endpointType) {
      switch (obj.endpointType) {
        case "LOG_LIST":
          return model.LogListTypeEndpoint.getDeserializedJsonObj(
            <model.LogListTypeEndpoint>(<object>jsonObj),
            true
          );
        case "LOG":
          return model.LogTypeEndpoint.getDeserializedJsonObj(
            <model.LogTypeEndpoint>(<object>jsonObj),
            true
          );
        default:
          if (common.LOG.logger) common.LOG.logger.info(`Unknown value for: ${obj.endpointType}`);
      }
    }
    return jsonObj;
  }
}
