/**
 * LogAnalytics API
 * The LogAnalytics API for the LogAnalytics service.

 * OpenAPI spec version: 20200601
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Column returned by querylanguage link command.
 *
 */
export interface ChartColumn extends model.AbstractColumn {
  /**
   * Time span between each timestamp in the timeseries datapoints.
   *
   */
  "intervalGap"?: string;
  /**
   * List of timestamps making up the timeseries datapoints.
   *
   */
  "intervals"?: Array<number>;
  /**
   * Total matching count for each timeseries datapoint.
   *
   */
  "totalIntervalCounts"?: Array<number>;
  /**
   * List of series data sets representing various link command results.
   *
   */
  "series"?: Array<model.ChartDataColumn>;

  "type": string;
}

export namespace ChartColumn {
  export function getJsonObj(obj: ChartColumn, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj ? obj : (model.AbstractColumn.getJsonObj(obj) as ChartColumn)),
      ...{
        "series": obj.series
          ? obj.series.map(item => {
              return model.ChartDataColumn.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export const type = "CHART_COLUMN";
  export function getDeserializedJsonObj(obj: ChartColumn, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.AbstractColumn.getDeserializedJsonObj(obj) as ChartColumn)),
      ...{
        "series": obj.series
          ? obj.series.map(item => {
              return model.ChartDataColumn.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
