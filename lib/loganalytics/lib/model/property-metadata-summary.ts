/**
 * LogAnalytics API
 * The LogAnalytics API for the LogAnalytics service.

 * OpenAPI spec version: 20200601
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Summary of property metadata details.
 */
export interface PropertyMetadataSummary {
  /**
   * The property name.
   */
  "name"?: string;
  /**
   * The property display name.
   */
  "displayName"?: string;
  /**
   * The property description.
   */
  "description"?: string;
  /**
   * The default property value.
   */
  "defaultValue"?: string;
  /**
   * A list of levels at which the property could be defined.
   */
  "levels"?: Array<model.Level>;
}

export namespace PropertyMetadataSummary {
  export function getJsonObj(obj: PropertyMetadataSummary): object {
    const jsonObj = {
      ...obj,
      ...{
        "levels": obj.levels
          ? obj.levels.map(item => {
              return model.Level.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: PropertyMetadataSummary): object {
    const jsonObj = {
      ...obj,
      ...{
        "levels": obj.levels
          ? obj.levels.map(item => {
              return model.Level.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
