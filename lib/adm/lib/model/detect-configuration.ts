/**
 * Application Dependency Management API
 * Use the Application Dependency Management API to create knowledge bases and vulnerability audits.  For more information, see [ADM](/Content/application-dependency-management/home.htm).
 * OpenAPI spec version: 20220421
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * A configuration to define the constraints when detecting vulnerable dependencies.
 *
 */
export interface DetectConfiguration {
  /**
   * The list of dependencies to be ignored by the recommendation algorithm. The dependency pattern is matched against the 'group:artifact:version' or the purl of a dependency.
   * An asterisk (*) at the end in the dependency pattern acts as a wildcard and matches zero or more characters.
   *
   */
  "exclusions"?: Array<string>;
  /**
   * The upgrade policy for recommendations.
   * The {@code Nearest} upgrade policy upgrades a dependency to the oldest version that meets both of the following criteria: it is newer than the current version and it is not affected by a vulnerability.
   *
   */
  "upgradePolicy"?: DetectConfiguration.UpgradePolicy;
  /**
   * The maximum Common Vulnerability Scoring System Version 2 (CVSS V2) score. An artifact with a CVSS V2 score below this value is not considered for patching. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "maxPermissibleCvssV2Score"?: number;
  /**
   * The maximum Common Vulnerability Scoring System Version 3 (CVSS V3) score. An artifact with a CVSS V3 score below this value is not considered for patching. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "maxPermissibleCvssV3Score"?: number;
  /**
   * The maximum ADM Severity. An artifact with an ADM Severity below this value is not considered for patching.
   */
  "maxPermissibleSeverity"?: model.ConfigSeverity;
}

export namespace DetectConfiguration {
  export enum UpgradePolicy {
    Nearest = "NEAREST",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: DetectConfiguration): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: DetectConfiguration): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
