/**
 * Data Safe API
 * APIs for using Oracle Data Safe.
 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * The Fixed String masking format uses a constant string for masking. To learn
 * more, check Fixed String in the Data Safe documentation.
 *
 */
export interface FixedStringFormatEntry extends model.FormatEntry {
  /**
   * The constant string to be used for masking.
   */
  "fixedString": string;

  "type": string;
}

export namespace FixedStringFormatEntry {
  export function getJsonObj(obj: FixedStringFormatEntry, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj ? obj : (model.FormatEntry.getJsonObj(obj) as FixedStringFormatEntry)),
      ...{}
    };

    return jsonObj;
  }
  export const type = "FIXED_STRING";
  export function getDeserializedJsonObj(
    obj: FixedStringFormatEntry,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.FormatEntry.getDeserializedJsonObj(obj) as FixedStringFormatEntry)),
      ...{}
    };

    return jsonObj;
  }
}
