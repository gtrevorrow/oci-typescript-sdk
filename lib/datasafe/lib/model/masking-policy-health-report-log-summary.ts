/**
 * Data Safe API
 * APIs for using Oracle Data Safe.
 * OpenAPI spec version: 20181201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * A log entry related to the pre-masking health check.
 */
export interface MaskingPolicyHealthReportLogSummary {
  /**
   * The log entry type.
   */
  "messageType": MaskingPolicyHealthReportLogSummary.MessageType;
  /**
   * The date and time the log entry was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
   *
   */
  "timestamp": Date;
  /**
   * A human-readable log entry.
   */
  "message": string;
  /**
   * A human-readable log entry to remedy any error or warnings in the masking policy.
   */
  "remediation"?: string;
  /**
   * A human-readable description for the log entry.
   */
  "description": string;
}

export namespace MaskingPolicyHealthReportLogSummary {
  export enum MessageType {
    Pass = "PASS",
    Warning = "WARNING",
    Error = "ERROR",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: MaskingPolicyHealthReportLogSummary): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: MaskingPolicyHealthReportLogSummary): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
