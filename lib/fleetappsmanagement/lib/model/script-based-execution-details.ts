/**
 * Fleet Application Management Service API
 * Fleet Application Management provides a centralized platform to help you automate resource management tasks, validate patch compliance, and enhance operational efficiency across an enterprise.

 * OpenAPI spec version: 20230831
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Details for script-based execution.
 */
export interface ScriptBasedExecutionDetails extends model.ExecutionDetails {
  "variables"?: model.TaskVariable;
  "content"?: model.ObjectStorageBucketContentDetails;
  /**
   * Optional command to execute the content.
   * You can provide any commands/arguments that can't be part of the script.
   *
   */
  "command"?: string;
  /**
   * Credentials required for executing the task.
   *
   */
  "credentials"?: Array<model.ConfigAssociationDetails>;

  "executionType": string;
}

export namespace ScriptBasedExecutionDetails {
  export function getJsonObj(obj: ScriptBasedExecutionDetails, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.ExecutionDetails.getJsonObj(obj) as ScriptBasedExecutionDetails)),
      ...{
        "variables": obj.variables ? model.TaskVariable.getJsonObj(obj.variables) : undefined,
        "content": obj.content ? model.ContentDetails.getJsonObj(obj.content) : undefined,

        "credentials": obj.credentials
          ? obj.credentials.map(item => {
              return model.ConfigAssociationDetails.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export const executionType = "SCRIPT";
  export function getDeserializedJsonObj(
    obj: ScriptBasedExecutionDetails,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.ExecutionDetails.getDeserializedJsonObj(obj) as ScriptBasedExecutionDetails)),
      ...{
        "variables": obj.variables
          ? model.TaskVariable.getDeserializedJsonObj(obj.variables)
          : undefined,
        "content": obj.content
          ? model.ContentDetails.getDeserializedJsonObj(obj.content)
          : undefined,

        "credentials": obj.credentials
          ? obj.credentials.map(item => {
              return model.ConfigAssociationDetails.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
