/**
 * Fleet Application Management Service API
 * Fleet Application Management provides a centralized platform to help you automate resource management tasks, validate patch compliance, and enhance operational efficiency across an enterprise.

 * OpenAPI spec version: 20250228
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Fleet Type
 */
export interface FleetDetails {
  "fleetType": string;
}

export namespace FleetDetails {
  export function getJsonObj(obj: FleetDetails): object {
    const jsonObj = { ...obj, ...{} };

    if (obj && "fleetType" in obj && obj.fleetType) {
      switch (obj.fleetType) {
        case "GROUP":
          return model.GroupFleetDetails.getJsonObj(
            <model.GroupFleetDetails>(<object>jsonObj),
            true
          );
        case "PRODUCT":
          return model.ProductFleetDetails.getJsonObj(
            <model.ProductFleetDetails>(<object>jsonObj),
            true
          );
        case "GENERIC":
          return model.GenericFleetDetails.getJsonObj(
            <model.GenericFleetDetails>(<object>jsonObj),
            true
          );
        case "ENVIRONMENT":
          return model.EnvironmentFleetDetails.getJsonObj(
            <model.EnvironmentFleetDetails>(<object>jsonObj),
            true
          );
        default:
          if (common.LOG.logger) common.LOG.logger.info(`Unknown value for: ${obj.fleetType}`);
      }
    }
    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: FleetDetails): object {
    const jsonObj = { ...obj, ...{} };

    if (obj && "fleetType" in obj && obj.fleetType) {
      switch (obj.fleetType) {
        case "GROUP":
          return model.GroupFleetDetails.getDeserializedJsonObj(
            <model.GroupFleetDetails>(<object>jsonObj),
            true
          );
        case "PRODUCT":
          return model.ProductFleetDetails.getDeserializedJsonObj(
            <model.ProductFleetDetails>(<object>jsonObj),
            true
          );
        case "GENERIC":
          return model.GenericFleetDetails.getDeserializedJsonObj(
            <model.GenericFleetDetails>(<object>jsonObj),
            true
          );
        case "ENVIRONMENT":
          return model.EnvironmentFleetDetails.getDeserializedJsonObj(
            <model.EnvironmentFleetDetails>(<object>jsonObj),
            true
          );
        default:
          if (common.LOG.logger) common.LOG.logger.info(`Unknown value for: ${obj.fleetType}`);
      }
    }
    return jsonObj;
  }
}
