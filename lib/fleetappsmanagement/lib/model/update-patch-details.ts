/**
 * Fleet Application Management Service API
 * Fleet Application Management provides a centralized platform to help you automate resource management tasks, validate patch compliance, and enhance operational efficiency across an enterprise.

 * OpenAPI spec version: 20230831
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * The patch information to be updated.
 */
export interface UpdatePatchDetails {
  /**
   * A user-friendly description. To provide some insight about the resource.
   * Avoid entering confidential information.
   *
   */
  "description"?: string;
  "patchType"?: model.PatchType;
  /**
   * Patch Severity.
   */
  "severity"?: model.PatchSeverity;
  /**
   * Date when the patch was released.
   */
  "timeReleased"?: Date;
  "artifactDetails"?: model.PlatformSpecificArtifactDetails | model.GenericArtifactDetails;
  "product"?: model.PatchProduct;
  /**
   * Dependent Patches.
   *
   */
  "dependentPatches"?: Array<model.DependentPatchDetails>;
  /**
   * OCID of the compartment to which the resource belongs to.
   */
  "compartmentId"?: string;
  /**
   * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
   * Example: {@code {\"bar-key\": \"value\"}}
   *
   */
  "freeformTags"?: { [key: string]: string };
  /**
   * Defined tags for this resource. Each key is predefined and scoped to a namespace.
   * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
   *
   */
  "definedTags"?: { [key: string]: { [key: string]: any } };
}

export namespace UpdatePatchDetails {
  export function getJsonObj(obj: UpdatePatchDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "patchType": obj.patchType ? model.PatchType.getJsonObj(obj.patchType) : undefined,

        "artifactDetails": obj.artifactDetails
          ? model.ArtifactDetails.getJsonObj(obj.artifactDetails)
          : undefined,
        "product": obj.product ? model.PatchProduct.getJsonObj(obj.product) : undefined,
        "dependentPatches": obj.dependentPatches
          ? obj.dependentPatches.map(item => {
              return model.DependentPatchDetails.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: UpdatePatchDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "patchType": obj.patchType
          ? model.PatchType.getDeserializedJsonObj(obj.patchType)
          : undefined,

        "artifactDetails": obj.artifactDetails
          ? model.ArtifactDetails.getDeserializedJsonObj(obj.artifactDetails)
          : undefined,
        "product": obj.product ? model.PatchProduct.getDeserializedJsonObj(obj.product) : undefined,
        "dependentPatches": obj.dependentPatches
          ? obj.dependentPatches.map(item => {
              return model.DependentPatchDetails.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
