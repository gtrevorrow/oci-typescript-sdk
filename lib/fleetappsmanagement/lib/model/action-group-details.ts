/**
 * Fleet Application Management Service API
 * Fleet Application Management provides a centralized platform to help you automate resource management tasks, validate patch compliance, and enhance operational efficiency across an enterprise.

 * OpenAPI spec version: 20250228
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Action Group details.
 */
export interface ActionGroupDetails {
  /**
   * Name of the ActionGroup.
   */
  "displayName"?: string;
  /**
   * Product associated.
   * Only applicable if actionGroup type is PRODUCT.
   *
   */
  "product"?: string;
  /**
   * LifeCycle Operation.
   */
  "lifecycleOperation"?: string;
  /**
   * Unique producer Id at Action Group Level
   */
  "activityId"?: string;
  /**
   * Status of the Job at Action Group Level.
   */
  "status"?: model.JobStatus;
  /**
   * The time the Scheduler Job started. An RFC3339 formatted datetime string.
   */
  "timeStarted"?: Date;
  /**
   * The time the Scheduler Job ended. An RFC3339 formatted datetime string.
   */
  "timeEnded"?: Date;

  "kind": string;
}

export namespace ActionGroupDetails {
  export function getJsonObj(obj: ActionGroupDetails): object {
    const jsonObj = { ...obj, ...{} };

    if (obj && "kind" in obj && obj.kind) {
      switch (obj.kind) {
        case "FLEET_USING_RUNBOOK":
          return model.FleetBasedActionGroupDetails.getJsonObj(
            <model.FleetBasedActionGroupDetails>(<object>jsonObj),
            true
          );
        default:
          if (common.LOG.logger) common.LOG.logger.info(`Unknown value for: ${obj.kind}`);
      }
    }
    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: ActionGroupDetails): object {
    const jsonObj = { ...obj, ...{} };

    if (obj && "kind" in obj && obj.kind) {
      switch (obj.kind) {
        case "FLEET_USING_RUNBOOK":
          return model.FleetBasedActionGroupDetails.getDeserializedJsonObj(
            <model.FleetBasedActionGroupDetails>(<object>jsonObj),
            true
          );
        default:
          if (common.LOG.logger) common.LOG.logger.info(`Unknown value for: ${obj.kind}`);
      }
    }
    return jsonObj;
  }
}
