/**
 * Fleet Application Management Service API
 * Fleet Application Management provides a centralized platform to help you automate resource management tasks, validate patch compliance, and enhance operational efficiency across an enterprise.

 * OpenAPI spec version: 20250228
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * The information to be updated.
 */
export interface UpdateFleetDetails {
  /**
    * A user-friendly name. Does not have to be unique, and it's changeable.
* Avoid entering confidential information.
* <p>
Example: {@code My new resource}
* 
    */
  "displayName"?: string;
  /**
   * A user-friendly description. To provide some insight about the resource.
   * Avoid entering confidential information.
   *
   */
  "description"?: string;
  /**
   * Notification Preferences associated with the Fleet.
   * An UPDATE operation replaces the existing notification preferences list entirely
   *
   */
  "notificationPreferences"?: Array<model.NotificationPreference>;
  /**
   * A value that represents if auto-confirming of the targets can be enabled.
   * This will allow targets to be auto-confirmed in the fleet without manual intervention.
   *
   */
  "isTargetAutoConfirm"?: boolean;
  "resourceSelection"?: model.DynamicResourceSelection | model.ManualResourceSelection;
  /**
   * Products associated with the Fleet.
   */
  "products"?: Array<string>;
  /**
   * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
   * Example: {@code {\"bar-key\": \"value\"}}
   *
   */
  "freeformTags"?: { [key: string]: string };
  /**
   * Defined tags for this resource. Each key is predefined and scoped to a namespace.
   * Example: {@code {\"foo-namespace\": {\"bar-key\": \"value\"}}}
   *
   */
  "definedTags"?: { [key: string]: { [key: string]: any } };
}

export namespace UpdateFleetDetails {
  export function getJsonObj(obj: UpdateFleetDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "notificationPreferences": obj.notificationPreferences
          ? obj.notificationPreferences.map(item => {
              return model.NotificationPreference.getJsonObj(item);
            })
          : undefined,

        "resourceSelection": obj.resourceSelection
          ? model.ResourceSelection.getJsonObj(obj.resourceSelection)
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: UpdateFleetDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "notificationPreferences": obj.notificationPreferences
          ? obj.notificationPreferences.map(item => {
              return model.NotificationPreference.getDeserializedJsonObj(item);
            })
          : undefined,

        "resourceSelection": obj.resourceSelection
          ? model.ResourceSelection.getDeserializedJsonObj(obj.resourceSelection)
          : undefined
      }
    };

    return jsonObj;
  }
}
