/**
 * Fleet Application Management Service API
 * Fleet Application Management provides a centralized platform to help you automate resource management tasks, validate patch compliance, and enhance operational efficiency across an enterprise.

 * OpenAPI spec version: 20250228
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Catalog par source config.
 *
 */
export interface CatalogParSourceConfig extends model.CatalogSourcePayload {
  /**
   * nameSpace
   *
   */
  "namespaceName"?: string;
  /**
   * bucket name
   *
   */
  "bucketName"?: string;
  /**
   * object name
   *
   */
  "objectName"?: string;
  /**
   * access uri
   *
   */
  "accessUri"?: string;
  /**
    * The date and time expires, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
* <p>
Example: {@code 2016-08-25T21:10:29.600Z}
* 
    */
  "timeExpires"?: Date;

  "configSourceType": string;
}

export namespace CatalogParSourceConfig {
  export function getJsonObj(obj: CatalogParSourceConfig, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.CatalogSourcePayload.getJsonObj(obj) as CatalogParSourceConfig)),
      ...{}
    };

    return jsonObj;
  }
  export const configSourceType = "PAR_CATALOG_SOURCE";
  export function getDeserializedJsonObj(
    obj: CatalogParSourceConfig,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.CatalogSourcePayload.getDeserializedJsonObj(obj) as CatalogParSourceConfig)),
      ...{}
    };

    return jsonObj;
  }
}
