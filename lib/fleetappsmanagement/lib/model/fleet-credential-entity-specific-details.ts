/**
 * Fleet Application Management Service API
 * Fleet Application Management provides a centralized platform to help you automate resource management tasks, validate patch compliance, and enhance operational efficiency across an enterprise.

 * OpenAPI spec version: 20230831
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Fleet credential details.
 */
export interface FleetCredentialEntitySpecificDetails
  extends model.CredentialEntitySpecificDetails {
  /**
   * List of fleet credential variables.
   */
  "variables"?: Array<model.Variable>;

  "credentialLevel": string;
}

export namespace FleetCredentialEntitySpecificDetails {
  export function getJsonObj(
    obj: FleetCredentialEntitySpecificDetails,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.CredentialEntitySpecificDetails.getJsonObj(
            obj
          ) as FleetCredentialEntitySpecificDetails)),
      ...{
        "variables": obj.variables
          ? obj.variables.map(item => {
              return model.Variable.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export const credentialLevel = "FLEET";
  export function getDeserializedJsonObj(
    obj: FleetCredentialEntitySpecificDetails,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.CredentialEntitySpecificDetails.getDeserializedJsonObj(
            obj
          ) as FleetCredentialEntitySpecificDetails)),
      ...{
        "variables": obj.variables
          ? obj.variables.map(item => {
              return model.Variable.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
