/**
 * Fleet Application Management Service API
 * Fleet Application Management provides a centralized platform to help you automate resource management tasks, validate patch compliance, and enhance operational efficiency across an enterprise.

 * OpenAPI spec version: 20230831
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Resource level execution status and target associations.
 */
export interface EntityExecutionDetails {
  /**
   * Resource Identifier associated with the Work Request.
   */
  "resourceId": string;
  /**
   * Resource Display Name.
   */
  "resourceDisplayName"?: string;
  /**
   * Description of the Resource Execution status.
   * If there are any errors, this can also include a short error message.
   *
   */
  "description"?: string;
  /**
   * The sequence of the Resource.
   */
  "sequence"?: string;
  /**
   * Targets associated with the resource.
   */
  "targets"?: Array<model.ActivityResourceTarget>;
  /**
   * Status of the Job at Resource Level.
   */
  "status": model.JobStatus;
  /**
   * The time the task started for the resource. An RFC3339 formatted datetime string
   */
  "timeStarted"?: Date;
  /**
   * The time the task ended for the resource. An RFC3339 formatted datetime string
   */
  "timeEnded"?: Date;
}

export namespace EntityExecutionDetails {
  export function getJsonObj(obj: EntityExecutionDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "targets": obj.targets
          ? obj.targets.map(item => {
              return model.ActivityResourceTarget.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: EntityExecutionDetails): object {
    const jsonObj = {
      ...obj,
      ...{
        "targets": obj.targets
          ? obj.targets.map(item => {
              return model.ActivityResourceTarget.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
