/**
 * MarketplacePublisherService API
 * Use the Marketplace Publisher API to manage the publishing of applications in Oracle Cloud Infrastructure Marketplace.
 * OpenAPI spec version: 20241201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Listing revision update details for listings
 */
export interface UpdateServiceListingRevisionDetails extends model.UpdateListingRevisionDetails {
  /**
   * Custom text by partner regarding contact information
   */
  "contactUs"?: string;
  /**
   * List of product codes subscribed by listing.
   */
  "productCodes"?: Array<string>;
  /**
   * List of industries subscribed by listing.
   */
  "industries"?: Array<string>;
  /**
   * Number of trained professional per product
   */
  "trainedProfessionals"?: Array<model.TrainedProfessionals>;
  /**
   * Custom link to the listing
   */
  "vanityUrl"?: string;
  /**
   * Support details based on geographic location
   */
  "geoLocations"?: Array<model.GeoLocation>;

  "listingType": string;
}

export namespace UpdateServiceListingRevisionDetails {
  export function getJsonObj(
    obj: UpdateServiceListingRevisionDetails,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.UpdateListingRevisionDetails.getJsonObj(
            obj
          ) as UpdateServiceListingRevisionDetails)),
      ...{
        "trainedProfessionals": obj.trainedProfessionals
          ? obj.trainedProfessionals.map(item => {
              return model.TrainedProfessionals.getJsonObj(item);
            })
          : undefined,

        "geoLocations": obj.geoLocations
          ? obj.geoLocations.map(item => {
              return model.GeoLocation.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export const listingType = "SERVICE";
  export function getDeserializedJsonObj(
    obj: UpdateServiceListingRevisionDetails,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.UpdateListingRevisionDetails.getDeserializedJsonObj(
            obj
          ) as UpdateServiceListingRevisionDetails)),
      ...{
        "trainedProfessionals": obj.trainedProfessionals
          ? obj.trainedProfessionals.map(item => {
              return model.TrainedProfessionals.getDeserializedJsonObj(item);
            })
          : undefined,

        "geoLocations": obj.geoLocations
          ? obj.geoLocations.map(item => {
              return model.GeoLocation.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
