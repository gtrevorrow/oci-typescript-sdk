/**
 * MarketplacePublisherService API
 * Use the Marketplace Publisher API to manage the publishing of applications in Oracle Cloud Infrastructure Marketplace.
 * OpenAPI spec version: 20241201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * A pricing plan provided by the Publisher.
 */
export interface PricingPlan {
  /**
   * List of pricing rates provider by publisher.
   */
  "rates": Array<model.PricingRate>;

  "planType": string;
}

export namespace PricingPlan {
  export function getJsonObj(obj: PricingPlan): object {
    const jsonObj = {
      ...obj,
      ...{
        "rates": obj.rates
          ? obj.rates.map(item => {
              return model.PricingRate.getJsonObj(item);
            })
          : undefined
      }
    };

    if (obj && "planType" in obj && obj.planType) {
      switch (obj.planType) {
        case "METERED":
          return model.MeteredPricingPlan.getJsonObj(
            <model.MeteredPricingPlan>(<object>jsonObj),
            true
          );
        case "FIXED":
          return model.SaaSPricingPlan.getJsonObj(<model.SaaSPricingPlan>(<object>jsonObj), true);
        default:
          if (common.LOG.logger) common.LOG.logger.info(`Unknown value for: ${obj.planType}`);
      }
    }
    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: PricingPlan): object {
    const jsonObj = {
      ...obj,
      ...{
        "rates": obj.rates
          ? obj.rates.map(item => {
              return model.PricingRate.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    if (obj && "planType" in obj && obj.planType) {
      switch (obj.planType) {
        case "METERED":
          return model.MeteredPricingPlan.getDeserializedJsonObj(
            <model.MeteredPricingPlan>(<object>jsonObj),
            true
          );
        case "FIXED":
          return model.SaaSPricingPlan.getDeserializedJsonObj(
            <model.SaaSPricingPlan>(<object>jsonObj),
            true
          );
        default:
          if (common.LOG.logger) common.LOG.logger.info(`Unknown value for: ${obj.planType}`);
      }
    }
    return jsonObj;
  }
}
