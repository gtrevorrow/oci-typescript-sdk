/**
 * MarketplacePublisherService API
 * Use the Marketplace Publisher API to manage the publishing of applications in Oracle Cloud Infrastructure Marketplace.
 * OpenAPI spec version: 20241201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Listing revision details for listings
 */
export interface OciListingRevision extends model.ListingRevision {
  "versionDetails"?: model.VersionDetails;
  /**
   * System requirements for the listing revision.
   */
  "systemRequirements"?: string;
  /**
   * The pricing model for the listing revision.
   */
  "pricingType": OciListingRevision.PricingType;
  /**
   * List of products subscribed by listing.
   */
  "products": Array<model.ListingProduct>;
  /**
   * List of Pricing Plans provided by publisher.
   */
  "pricingPlans"?: Array<model.PricingPlan>;
  /**
   * Listing availability and Pricing Policy statement.
   */
  "availabilityAndPricingPolicy"?: string;
  /**
   * Allowed tenancies provided when a listing revision is published as private.
   */
  "allowedTenancies"?: Array<string>;
  /**
   * Custom link to the listing
   */
  "vanityUrl"?: string;
  /**
   * OCIDs of service listings attached to lead gen listing
   */
  "recommendedServiceProviderListingIds"?: Array<string>;
  /**
   * Identifies whether publisher allows internal tenancy launches for the listing revision.
   */
  "areInternalTenancyLaunchAllowed"?: boolean;
  /**
   * Is this listing rover exportable
   */
  "isRoverExportable"?: boolean;

  "listingType": string;
}

export namespace OciListingRevision {
  export enum PricingType {
    Free = "FREE",
    Byol = "BYOL",
    Paygo = "PAYGO",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: OciListingRevision, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj ? obj : (model.ListingRevision.getJsonObj(obj) as OciListingRevision)),
      ...{
        "versionDetails": obj.versionDetails
          ? model.VersionDetails.getJsonObj(obj.versionDetails)
          : undefined,

        "products": obj.products
          ? obj.products.map(item => {
              return model.ListingProduct.getJsonObj(item);
            })
          : undefined,
        "pricingPlans": obj.pricingPlans
          ? obj.pricingPlans.map(item => {
              return model.PricingPlan.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export const listingType = "OCI_APPLICATION";
  export function getDeserializedJsonObj(
    obj: OciListingRevision,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.ListingRevision.getDeserializedJsonObj(obj) as OciListingRevision)),
      ...{
        "versionDetails": obj.versionDetails
          ? model.VersionDetails.getDeserializedJsonObj(obj.versionDetails)
          : undefined,

        "products": obj.products
          ? obj.products.map(item => {
              return model.ListingProduct.getDeserializedJsonObj(item);
            })
          : undefined,
        "pricingPlans": obj.pricingPlans
          ? obj.pricingPlans.map(item => {
              return model.PricingPlan.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
