/**
 * MarketplacePublisherService API
 * Use the Marketplace Publisher API to manage the publishing of applications in Oracle Cloud Infrastructure Marketplace.
 * OpenAPI spec version: 20241201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Supported services attachment for the service listing revision.
 */
export interface SupportedServiceAttachment extends model.ListingRevisionAttachment {
  /**
   * Name of the service
   */
  "serviceName": string;
  /**
   * Optional url to service
   */
  "url"?: string;
  /**
   * Type of service
   */
  "type": SupportedServiceAttachment.Type;
  /**
   * URL of the uploaded document.
   */
  "contentUrl"?: string;
  /**
   * The MIME type of the uploaded data.
   */
  "mimeType"?: string;

  "attachmentType": string;
}

export namespace SupportedServiceAttachment {
  export enum Type {
    ImplementationService = "IMPLEMENTATION_SERVICE",
    ConsultingService = "CONSULTING_SERVICE",
    AppDevelopmentService = "APP_DEVELOPMENT_SERVICE",
    ManagedService = "MANAGED_SERVICE",
    Other = "OTHER",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: SupportedServiceAttachment, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.ListingRevisionAttachment.getJsonObj(obj) as SupportedServiceAttachment)),
      ...{}
    };

    return jsonObj;
  }
  export const attachmentType = "SUPPORTED_SERVICES";
  export function getDeserializedJsonObj(
    obj: SupportedServiceAttachment,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.ListingRevisionAttachment.getDeserializedJsonObj(
            obj
          ) as SupportedServiceAttachment)),
      ...{}
    };

    return jsonObj;
  }
}
