/**
 * MarketplacePublisherService API
 * Use the Marketplace Publisher API to manage the publishing of applications in Oracle Cloud Infrastructure Marketplace.
 * OpenAPI spec version: 20241201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * A listing SKUs and meter information attached by marketplace admin.
 */
export interface ListingPart {
  /**
   * The SKU/part name.
   */
  "sku": string;
  /**
   * The part's metric.
   */
  "metricType": ListingPart.MetricType;
  /**
   * rate allocation, these are calculated based on rate information at listing revision. Note: Numbers greater than Number.MAX_SAFE_INTEGER will result in rounding issues.
   */
  "rateAllocation": number;
  /**
   * Identifies whether part has Gov SKU.
   */
  "hasGovSku": boolean;
  /**
   * List of meters associated with the part.
   */
  "meters": Array<model.ListingMeter>;
}

export namespace ListingPart {
  export enum MetricType {
    OcpuHours = "OCPU_HOURS",
    InstanceHours = "INSTANCE_HOURS",
    CoreHours = "CORE_HOURS"
  }

  export function getJsonObj(obj: ListingPart): object {
    const jsonObj = {
      ...obj,
      ...{
        "meters": obj.meters
          ? obj.meters.map(item => {
              return model.ListingMeter.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: ListingPart): object {
    const jsonObj = {
      ...obj,
      ...{
        "meters": obj.meters
          ? obj.meters.map(item => {
              return model.ListingMeter.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
