/**
 * MarketplacePublisherService API
 * Use the Marketplace Publisher API to manage the publishing of applications in Oracle Cloud Infrastructure Marketplace.
 * OpenAPI spec version: 20241201
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Metered pricing plan.
 *
 */
export interface MeteredPricingPlan extends model.PricingPlan {
  /**
   * The listing's pricing plan name.
   */
  "name": MeteredPricingPlan.Name;
  /**
   * Additional metadata key/value pairs for the metering pricing.
   *
   */
  "extendedMetadata"?: { [key: string]: string };

  "planType": string;
}

export namespace MeteredPricingPlan {
  export enum Name {
    PerInstance = "PER_INSTANCE",
    PerOcpuMinBillingHrs = "PER_OCPU_MIN_BILLING_HRS",
    PerOcpuLinear = "PER_OCPU_LINEAR",
    PerInstanceMonthlyInclusive = "PER_INSTANCE_MONTHLY_INCLUSIVE",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: MeteredPricingPlan, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj ? obj : (model.PricingPlan.getJsonObj(obj) as MeteredPricingPlan)),
      ...{}
    };

    return jsonObj;
  }
  export const planType = "METERED";
  export function getDeserializedJsonObj(
    obj: MeteredPricingPlan,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.PricingPlan.getDeserializedJsonObj(obj) as MeteredPricingPlan)),
      ...{}
    };

    return jsonObj;
  }
}
