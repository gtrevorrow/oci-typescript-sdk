/**
 * Application Performance Monitoring Configuration API
 * Use the Application Performance Monitoring Configuration API to query and set Application Performance Monitoring
configuration. For more information, see [Application Performance Monitoring](https://docs.oracle.com/iaas/application-performance-monitoring/index.html).

 * OpenAPI spec version: 20210201
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * An object that represents APM Agent provisioning via a Management Agent.
 */
export interface MacsApmExtension extends model.Config {
  /**
   * The name by which a configuration entity is displayed to the end user.
   */
  "displayName"?: string;
  /**
   * The [OCID](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Management Agent that will provision the APM Agent.
   *
   */
  "managementAgentId"?: string;
  /**
   * Filter patterns used to discover active Java processes for provisioning the APM Agent.
   */
  "processFilter"?: Array<string>;
  /**
   * The OS user that should be used to discover Java processes.
   */
  "runAsUser"?: string;
  /**
   * The name of the service being monitored. This argument enables you to filter by
   * service and view traces and other signals in the APM Explorer user interface.
   *
   */
  "serviceName"?: string;
  /**
   * The version of the referenced agent bundle.
   */
  "agentVersion"?: string;
  /**
   * The directory owned by runAsUser.
   */
  "attachInstallDir"?: string;

  "configType": string;
}

export namespace MacsApmExtension {
  export function getJsonObj(obj: MacsApmExtension, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj ? obj : (model.Config.getJsonObj(obj) as MacsApmExtension)),
      ...{}
    };

    return jsonObj;
  }
  export const configType = "MACS_APM_EXTENSION";
  export function getDeserializedJsonObj(obj: MacsApmExtension, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj ? obj : (model.Config.getDeserializedJsonObj(obj) as MacsApmExtension)),
      ...{}
    };

    return jsonObj;
  }
}
