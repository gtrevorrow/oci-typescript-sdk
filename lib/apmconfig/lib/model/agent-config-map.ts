/**
 * Application Performance Monitoring Configuration API
 * Use the Application Performance Monitoring Configuration API to query and set Application Performance Monitoring
configuration. For more information, see [Application Performance Monitoring](https://docs.oracle.com/iaas/application-performance-monitoring/index.html).

 * OpenAPI spec version: 20210201
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Collection of agent configuration files.
 * For agents that use a single configuration file, this SHOULD contain a single entry and the key MAY be an empty string.
 * To apply a different configuration in a subset of the agents, put this block anywhere in the body of the configuration and edit <some variable> and <some content>
 * {{ <some variable> | default <some content> }}
 * Example:
 * com.oracle.apm.agent.tracer.enable.jfr = {{ isJfrEnabled | default false }}
 * Then, in the configuration's overrides, specify a different value for <some variable> along with the desired agent filter.
 * Example:
 * \"agentFilter\": \"ApplicationType='Tomcat'\"
 * \"overrideMap\": {
 *     \"isJfrEnabled\": true
 * }
 *
 */
export interface AgentConfigMap {
  /**
   * Map of agent configuration files, where keys are file names.
   */
  "configMap"?: { [key: string]: model.AgentConfigFile };
}

export namespace AgentConfigMap {
  export function getJsonObj(obj: AgentConfigMap): object {
    const jsonObj = {
      ...obj,
      ...{
        "configMap": obj.configMap
          ? common.mapContainer(obj.configMap, model.AgentConfigFile.getJsonObj)
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: AgentConfigMap): object {
    const jsonObj = {
      ...obj,
      ...{
        "configMap": obj.configMap
          ? common.mapContainer(obj.configMap, model.AgentConfigFile.getDeserializedJsonObj)
          : undefined
      }
    };

    return jsonObj;
  }
}
