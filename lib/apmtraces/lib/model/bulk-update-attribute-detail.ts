/**
 * Application Performance Monitoring Trace Explorer API
 * Use the Application Performance Monitoring Trace Explorer API to query traces and associated spans in Trace Explorer. For more information, see [Application Performance Monitoring](https://docs.oracle.com/iaas/application-performance-monitoring/index.html).

 * OpenAPI spec version: 20200630
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Object that contains the details about a single attribute in the bulk request for which properties are to be updated.
 *
 */
export interface BulkUpdateAttributeDetail {
  /**
   * Name of the attribute for which notes are to be updated.
   *
   */
  "attributeName": string;
  /**
   * Unit of the attribute to be updated.
   *
   */
  "unit"?: BulkUpdateAttributeDetail.Unit;
  /**
   * Namespace of the attribute for which the properties are to be updated.
   *
   */
  "attributeNameSpace"?: BulkUpdateAttributeDetail.AttributeNameSpace;
}

export namespace BulkUpdateAttributeDetail {
  export enum Unit {
    None = "NONE",
    EpochTimeMs = "EPOCH_TIME_MS",
    Bytes = "BYTES",
    Count = "COUNT",
    DurationMs = "DURATION_MS",
    TraceStatus = "TRACE_STATUS",
    Percentage = "PERCENTAGE"
  }

  export enum AttributeNameSpace {
    Traces = "TRACES",
    Synthetic = "SYNTHETIC"
  }

  export function getJsonObj(obj: BulkUpdateAttributeDetail): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: BulkUpdateAttributeDetail): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
