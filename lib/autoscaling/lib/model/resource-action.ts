/**
 * Autoscaling API
 * Use the Autoscaling API to dynamically scale compute resources to meet application requirements. For more information about
autoscaling, see [Autoscaling](https://docs.oracle.com/iaas/Content/Compute/Tasks/autoscalinginstancepools.htm). For information about the
Compute service, see [Compute](https://docs.oracle.com/iaas/Content/Compute/home.htm).

 * OpenAPI spec version: 20181001
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * An action to run on a resource, such as stopping or starting an instance pool.
 */
export interface ResourceAction {
  "actionType": string;
}

export namespace ResourceAction {
  export function getJsonObj(obj: ResourceAction): object {
    const jsonObj = { ...obj, ...{} };

    if (obj && "actionType" in obj && obj.actionType) {
      switch (obj.actionType) {
        case "power":
          return model.ResourcePowerAction.getJsonObj(
            <model.ResourcePowerAction>(<object>jsonObj),
            true
          );
        default:
          if (common.LOG.logger) common.LOG.logger.info(`Unknown value for: ${obj.actionType}`);
      }
    }
    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: ResourceAction): object {
    const jsonObj = { ...obj, ...{} };

    if (obj && "actionType" in obj && obj.actionType) {
      switch (obj.actionType) {
        case "power":
          return model.ResourcePowerAction.getDeserializedJsonObj(
            <model.ResourcePowerAction>(<object>jsonObj),
            true
          );
        default:
          if (common.LOG.logger) common.LOG.logger.info(`Unknown value for: ${obj.actionType}`);
      }
    }
    return jsonObj;
  }
}
