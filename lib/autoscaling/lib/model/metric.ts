/**
 * Autoscaling API
 * Use the Autoscaling API to dynamically scale compute resources to meet application requirements. For more information about
autoscaling, see [Autoscaling](https://docs.oracle.com/iaas/Content/Compute/Tasks/autoscalinginstancepools.htm). For information about the
Compute service, see [Compute](https://docs.oracle.com/iaas/Content/Compute/home.htm).

 * OpenAPI spec version: 20181001
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Metric and threshold details for triggering an autoscaling action based on CPU or memory utilization.
 *
 */
export interface Metric extends model.MetricBase {
  "metricType": Metric.MetricType;
  "threshold": model.Threshold;

  "metricSource": string;
}

export namespace Metric {
  export enum MetricType {
    CpuUtilization = "CPU_UTILIZATION",
    MemoryUtilization = "MEMORY_UTILIZATION",
    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UnknownValue = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: Metric, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj ? obj : (model.MetricBase.getJsonObj(obj) as Metric)),
      ...{
        "threshold": obj.threshold ? model.Threshold.getJsonObj(obj.threshold) : undefined
      }
    };

    return jsonObj;
  }
  export const metricSource = "COMPUTE_AGENT";
  export function getDeserializedJsonObj(obj: Metric, isParentJsonObj?: boolean): object {
    const jsonObj = {
      ...(isParentJsonObj ? obj : (model.MetricBase.getDeserializedJsonObj(obj) as Metric)),
      ...{
        "threshold": obj.threshold
          ? model.Threshold.getDeserializedJsonObj(obj.threshold)
          : undefined
      }
    };

    return jsonObj;
  }
}
