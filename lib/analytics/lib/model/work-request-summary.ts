/**
 * Analytics API
 * Analytics API.

 * OpenAPI spec version: 20190331
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * An asynchronous work request.
 */
export interface WorkRequestSummary {
  /**
   * The resource OCID.
   *
   */
  "id": string;
  /**
   * The operation performed by the work request.
   *
   */
  "operationType": model.WorkRequestOperationType;
  /**
   * The current status of the work request.
   *
   */
  "status": model.WorkRequestStatus;
  /**
   * The compartment OCID of this work request.
   *
   */
  "compartmentId": string;
  /**
   * The resources this work request affects.
   *
   */
  "resources": Array<model.WorkRequestResource>;
  /**
    * The time the work request was accepted, in the format defined by RFC3339.
* <p>
Example: {@code 2016-08-25T21:10:29.600Z}
* 
    */
  "timeAccepted": Date;
  /**
    * The time the work request was started, in the format defined by RFC3339.
* <p>
Example: {@code 2016-08-25T21:10:29.600Z}
* 
    */
  "timeStarted"?: Date;
  /**
    * The time the work request was finished, in the format defined by RFC3339.
* <p>
Example: {@code 2016-08-25T21:10:29.600Z}
* 
    */
  "timeFinished"?: Date;
}

export namespace WorkRequestSummary {
  export function getJsonObj(obj: WorkRequestSummary): object {
    const jsonObj = {
      ...obj,
      ...{
        "resources": obj.resources
          ? obj.resources.map(item => {
              return model.WorkRequestResource.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: WorkRequestSummary): object {
    const jsonObj = {
      ...obj,
      ...{
        "resources": obj.resources
          ? obj.resources.map(item => {
              return model.WorkRequestResource.getDeserializedJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
