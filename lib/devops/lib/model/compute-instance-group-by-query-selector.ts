/**
 * DevOps API
 * Use the DevOps API to create DevOps projects, configure code repositories,  add artifacts to deploy, build and test software applications, configure  target deployment environments, and deploy software applications.  For more information, see [DevOps](/Content/devops/using/home.htm).
 * OpenAPI spec version: 20210630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Specifies the Compute instance group environment filtered by the RQS query expression.
 */
export interface ComputeInstanceGroupByQuerySelector extends model.ComputeInstanceGroupSelector {
  /**
   * Region identifier referred by the deployment environment. Region identifiers are listed at https://docs.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm
   */
  "region": string;
  /**
   * Query expression confirming to the OCI Search Language syntax to select compute instances for the group. The language is documented at https://docs.oracle.com/en-us/iaas/Content/Search/Concepts/querysyntax.htm
   */
  "query": string;

  "selectorType": string;
}

export namespace ComputeInstanceGroupByQuerySelector {
  export function getJsonObj(
    obj: ComputeInstanceGroupByQuerySelector,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.ComputeInstanceGroupSelector.getJsonObj(
            obj
          ) as ComputeInstanceGroupByQuerySelector)),
      ...{}
    };

    return jsonObj;
  }
  export const selectorType = "INSTANCE_QUERY";
  export function getDeserializedJsonObj(
    obj: ComputeInstanceGroupByQuerySelector,
    isParentJsonObj?: boolean
  ): object {
    const jsonObj = {
      ...(isParentJsonObj
        ? obj
        : (model.ComputeInstanceGroupSelector.getDeserializedJsonObj(
            obj
          ) as ComputeInstanceGroupByQuerySelector)),
      ...{}
    };

    return jsonObj;
  }
}
