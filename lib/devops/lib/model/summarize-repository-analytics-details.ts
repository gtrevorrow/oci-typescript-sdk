/**
 * DevOps API
 * Use the DevOps API to create DevOps projects, configure code repositories,  add artifacts to deploy, build and test software applications, configure  target deployment environments, and deploy software applications.  For more information, see [DevOps](/Content/devops/using/home.htm).
 * OpenAPI spec version: 20210630
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

/**
 * Details of the user configured settings for viewing the metrics at repository level.
 */
export interface SummarizeRepositoryAnalyticsDetails {
  /**
   * Email address of the author.
   */
  "authorEmail"?: string;
  /**
   * The name of the metric to be filtered.
   */
  "repositoryMetrics": Array<SummarizeRepositoryAnalyticsDetails.RepositoryMetrics>;
  /**
   * Metrics aggregated for the defined period.
   */
  "aggregationDuration"?: SummarizeRepositoryAnalyticsDetails.AggregationDuration;
  /**
   * The beginning of the metric data query time range.
   */
  "startTime": Date;
  /**
   * The end of the metric data query time range.
   */
  "endTime"?: Date;
  /**
   * Attribute by which metric data has to be grouped
   */
  "groupBy"?: SummarizeRepositoryAnalyticsDetails.GroupBy;
}

export namespace SummarizeRepositoryAnalyticsDetails {
  export enum RepositoryMetrics {
    Commits = "COMMITS",
    LinesAdded = "LINES_ADDED",
    LinesDeleted = "LINES_DELETED",
    PullRequestCreated = "PULL_REQUEST_CREATED",
    PullRequestMerged = "PULL_REQUEST_MERGED",
    PullRequestDeclined = "PULL_REQUEST_DECLINED",
    PullRequestReviewStartDurationInDays = "PULL_REQUEST_REVIEW_START_DURATION_IN_DAYS",
    PullRequestReviewDurationInDays = "PULL_REQUEST_REVIEW_DURATION_IN_DAYS",
    PullRequestApproved = "PULL_REQUEST_APPROVED",
    PullRequestReviewed = "PULL_REQUEST_REVIEWED",
    PullRequestComments = "PULL_REQUEST_COMMENTS"
  }

  export enum AggregationDuration {
    Daily = "DAILY",
    Weekly = "WEEKLY",
    Monthly = "MONTHLY",
    Yearly = "YEARLY"
  }

  export enum GroupBy {
    Author = "AUTHOR"
  }

  export function getJsonObj(obj: SummarizeRepositoryAnalyticsDetails): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
  export function getDeserializedJsonObj(obj: SummarizeRepositoryAnalyticsDetails): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
